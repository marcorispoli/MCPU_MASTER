.TH "ProjectionOptions" 3 "MCPU" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ProjectionOptions \- This class handles the projection selection process\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <ArmMotor\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum class \fBoptions\fP { \fBLCC\fP = 0, \fBLFB\fP, \fBLISO\fP, \fBLLM\fP, \fBLLMO\fP, \fBLML\fP, \fBLMLO\fP, \fBLSIO\fP, \fBRCC\fP, \fBRFB\fP, \fBRISO\fP, \fBRLM\fP, \fBRLMO\fP, \fBRML\fP, \fBRMLO\fP, \fBRSIO\fP, \fBLCCT\fP, \fBLFBT\fP, \fBLISOT\fP, \fBLLMT\fP, \fBLLMOT\fP, \fBLMLT\fP, \fBLMLOT\fP, \fBLSIOT\fP, \fBRCCT\fP, \fBRFBT\fP, \fBRISOT\fP, \fBRLMT\fP, \fBRLMOT\fP, \fBRMLT\fP, \fBRMLOT\fP, \fBRSIOT\fP, \fBLCCD\fP, \fBLFBD\fP, \fBLISOD\fP, \fBLLMD\fP, \fBLLMOD\fP, \fBLMLD\fP, \fBLMLOD\fP, \fBLSIOD\fP, \fBRCCD\fP, \fBRFBD\fP, \fBRISOD\fP, \fBRLMD\fP, \fBRLMOD\fP, \fBRMLD\fP, \fBRMLOD\fP, \fBRSIOD\fP, \fBLCCB\fP, \fBLFBB\fP, \fBLISOB\fP, \fBLLMB\fP, \fBLLMOB\fP, \fBLMLB\fP, \fBLMLOB\fP, \fBLSIOB\fP, \fBRCCB\fP, \fBRFBB\fP, \fBRISOB\fP, \fBRLMB\fP, \fBRLMOB\fP, \fBRMLB\fP, \fBRMLOB\fP, \fBRSIOB\fP, \fBLCCM\fP, \fBLFBM\fP, \fBLISOM\fP, \fBLLMM\fP, \fBLLMOM\fP, \fBLMLM\fP, \fBLMLOM\fP, \fBLSIOM\fP, \fBRCCM\fP, \fBRFBM\fP, \fBRISOM\fP, \fBRLMM\fP, \fBRLMOM\fP, \fBRMLM\fP, \fBRMLOM\fP, \fBRSIOM\fP, \fBLEN\fP, \fBUNDEF\fP = LEN, \fBRESERVED_FOR_INIT\fP }"
.br
.RI "This is the enumeration option code of the selectable projections\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBProjectionOptions\fP ()"
.br
.ti -1c
.RI "bool \fBsetList\fP (List< System::String^>^ list)"
.br
.RI "This function populates the list of the acceptable projections\&. "
.ti -1c
.RI "void \fBclrList\fP (void)"
.br
.RI "This function clears the acceptable list\&. "
.ti -1c
.RI "void \fBclrProjection\fP (void)"
.br
.RI "This function clears the current selected projection\&. "
.ti -1c
.RI "bool \fBisValidProjection\fP (System::String^ tag)"
.br
.RI "This function check if the named projection is present in the acceptable projection list\&. "
.ti -1c
.RI "bool \fBsetProjection\fP (System::String^ tag)"
.br
.RI "This function select a given projection from the string name of the projection\&. "
.ti -1c
.RI "bool \fBsetProjection\fP (\fBoptions\fP code)"
.br
.RI "This function select a given projection from the projection code\&. "
.ti -1c
.RI "System::String ^ \fBgetCurrentProjectionName\fP (void)"
.br
.RI "This function returns the projection name currently selected\&. "
.ti -1c
.RI "\fBoptions\fP \fBgetCurrentProjectionCode\fP (void)"
.br
.RI "This function returns the projection code currently selected\&. "
.ti -1c
.RI "Image ^ \fBgetCurrentProjectionIcon\fP (void)"
.br
.RI "This function returns the Image block of the selected projection\&. "
.ti -1c
.RI "List< \fBoptions\fP > ^ \fBgetCurrentProjectionList\fP (void)"
.br
.RI "This function returns the actual list of acceptable projections\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBoptions\fP \fBgetCode\fP (System::String^ tg)"
.br
.RI "This function returns the projection code from the related string name\&. "
.ti -1c
.RI "static System::String ^ \fBgetProjectionName\fP (\fBoptions\fP code)"
.br
.RI "This function returns the projection name corresponding to the projection code\&. "
.ti -1c
.RI "static Image ^ \fBgetProjectionIcon\fP (System::String^ tag)"
.br
.RI "This function returns the Image corresponding to the requested projection name string\&. "
.ti -1c
.RI "static Image ^ \fBgetProjectionIcon\fP (\fBoptions\fP code)"
.br
.RI "This function returns the Image corresponding to the requested projection code\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const cli::array< System::String^> ^ \fBtags\fP"
.br
.RI "This is a string array used to get a string name of the icon tag\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBoptions\fP \fBcurrent_projection_code\fP"
.br
.RI "This is the code of the active selected projection\&. "
.ti -1c
.RI "System::String ^ \fBcurrent_projection_name\fP"
.br
.RI "This is the name of the current selected projection\&. "
.ti -1c
.RI "List< \fBoptions\fP > ^ \fBprojection_list\fP"
.br
.RI "This is the list of the acceptable projections\&. "
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static Dictionary< System::String^, Image^> ^ \fBProjectionsIcons\fP"
.br
.RI "This is the Image list off all the possible projections;\&. "
.in -1c
.SH "Detailed Description"
.PP 
This class handles the projection selection process\&. 

When the Application should select a projection, the following steps shall be followed:
.IP "\(bu" 2
the requested projection shall be validated;
.IP "\(bu" 2
the requested projection shall be accepted;
.IP "\(bu" 2
the requested projection shall be displayed on the GUI;
.PP

.PP
This class provides methods and data structures to handle the previous steps\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum class \fBProjectionOptions::options\fP\fR [strong]\fP"

.PP
This is the enumeration option code of the selectable projections\&. The code value represent the related icon path in the icon path list pointed by ProjectionsIcons\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\f(BILCC \fP(0)
.TP
\f(BILFB \fP
.TP
\f(BILISO \fP
.TP
\f(BILLM \fP
.TP
\f(BILLMO \fP
.TP
\f(BILML \fP
.TP
\f(BILMLO \fP
.TP
\f(BILSIO \fP
.TP
\f(BIRCC \fP
.TP
\f(BIRFB \fP
.TP
\f(BIRISO \fP
.TP
\f(BIRLM \fP
.TP
\f(BIRLMO \fP
.TP
\f(BIRML \fP
.TP
\f(BIRMLO \fP
.TP
\f(BIRSIO \fP
.TP
\f(BILCCT \fP
.TP
\f(BILFBT \fP
.TP
\f(BILISOT \fP
.TP
\f(BILLMT \fP
.TP
\f(BILLMOT \fP
.TP
\f(BILMLT \fP
.TP
\f(BILMLOT \fP
.TP
\f(BILSIOT \fP
.TP
\f(BIRCCT \fP
.TP
\f(BIRFBT \fP
.TP
\f(BIRISOT \fP
.TP
\f(BIRLMT \fP
.TP
\f(BIRLMOT \fP
.TP
\f(BIRMLT \fP
.TP
\f(BIRMLOT \fP
.TP
\f(BIRSIOT \fP
.TP
\f(BILCCD \fP
.TP
\f(BILFBD \fP
.TP
\f(BILISOD \fP
.TP
\f(BILLMD \fP
.TP
\f(BILLMOD \fP
.TP
\f(BILMLD \fP
.TP
\f(BILMLOD \fP
.TP
\f(BILSIOD \fP
.TP
\f(BIRCCD \fP
.TP
\f(BIRFBD \fP
.TP
\f(BIRISOD \fP
.TP
\f(BIRLMD \fP
.TP
\f(BIRLMOD \fP
.TP
\f(BIRMLD \fP
.TP
\f(BIRMLOD \fP
.TP
\f(BIRSIOD \fP
.TP
\f(BILCCB \fP
.TP
\f(BILFBB \fP
.TP
\f(BILISOB \fP
.TP
\f(BILLMB \fP
.TP
\f(BILLMOB \fP
.TP
\f(BILMLB \fP
.TP
\f(BILMLOB \fP
.TP
\f(BILSIOB \fP
.TP
\f(BIRCCB \fP
.TP
\f(BIRFBB \fP
.TP
\f(BIRISOB \fP
.TP
\f(BIRLMB \fP
.TP
\f(BIRLMOB \fP
.TP
\f(BIRMLB \fP
.TP
\f(BIRMLOB \fP
.TP
\f(BIRSIOB \fP
.TP
\f(BILCCM \fP
.TP
\f(BILFBM \fP
.TP
\f(BILISOM \fP
.TP
\f(BILLMM \fP
.TP
\f(BILLMOM \fP
.TP
\f(BILMLM \fP
.TP
\f(BILMLOM \fP
.TP
\f(BILSIOM \fP
.TP
\f(BIRCCM \fP
.TP
\f(BIRFBM \fP
.TP
\f(BIRISOM \fP
.TP
\f(BIRLMM \fP
.TP
\f(BIRLMOM \fP
.TP
\f(BIRMLM \fP
.TP
\f(BIRMLOM \fP
.TP
\f(BIRSIOM \fP
.TP
\f(BILEN \fP
.TP
\f(BIUNDEF \fP(LEN)
.TP
\f(BIRESERVED_FOR_INIT \fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ProjectionOptions::ProjectionOptions ()\fR [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void ProjectionOptions::clrList (void )\fR [inline]\fP"

.PP
This function clears the acceptable list\&. 
.PP
\fBNote\fP
.RS 4
when the acceptable list is cleared, no more projection selection can be accepted by this module\&.
.RE
.PP

.SS "void ProjectionOptions::clrProjection (void )\fR [inline]\fP"

.PP
This function clears the current selected projection\&. 
.SS "static \fBoptions\fP ProjectionOptions::getCode (System::String^ tg)\fR [inline]\fP, \fR [static]\fP"

.PP
This function returns the projection code from the related string name\&. 
.PP
\fBParameters\fP
.RS 4
\fItg\fP The string name of the requested projection code
.RE
.PP
\fBReturns\fP
.RS 4
The projection code
.RE
.PP

.SS "\fBoptions\fP ProjectionOptions::getCurrentProjectionCode (void )\fR [inline]\fP"

.PP
This function returns the projection code currently selected\&. 
.PP
\fBReturns\fP
.RS 4
the current selected projection code
.RE
.PP

.SS "Image ^ ProjectionOptions::getCurrentProjectionIcon (void )\fR [inline]\fP"

.PP
This function returns the Image block of the selected projection\&. 
.PP
\fBReturns\fP
.RS 4
The Image of the selected projection
.RE
.PP

.SS "List< \fBoptions\fP > ^ ProjectionOptions::getCurrentProjectionList (void )\fR [inline]\fP"

.PP
This function returns the actual list of acceptable projections\&. 
.PP
\fBReturns\fP
.RS 4
he list of the accetable projections
.RE
.PP

.SS "System::String ^ ProjectionOptions::getCurrentProjectionName (void )\fR [inline]\fP"

.PP
This function returns the projection name currently selected\&. 
.PP
\fBReturns\fP
.RS 4
the current selected projection name
.RE
.PP

.SS "static Image ^ ProjectionOptions::getProjectionIcon (\fBoptions\fP code)\fR [inline]\fP, \fR [static]\fP"

.PP
This function returns the Image corresponding to the requested projection code\&. 
.PP
\fBParameters\fP
.RS 4
\fIcode\fP is the code of the projection
.RE
.PP
\fBReturns\fP
.RS 4
The Image of the requested projection
.RE
.PP

.SS "static Image ^ ProjectionOptions::getProjectionIcon (System::String^ tag)\fR [inline]\fP, \fR [static]\fP"

.PP
This function returns the Image corresponding to the requested projection name string\&. 
.PP
\fBParameters\fP
.RS 4
\fItag\fP is the name of the projection
.RE
.PP
\fBReturns\fP
.RS 4
The Image of the requested projection
.RE
.PP

.SS "static System::String ^ ProjectionOptions::getProjectionName (\fBoptions\fP code)\fR [inline]\fP, \fR [static]\fP"

.PP
This function returns the projection name corresponding to the projection code\&. 
.PP
\fBParameters\fP
.RS 4
\fIcode\fP The projection code
.RE
.PP
\fBReturns\fP
.RS 4
the projection name string
.RE
.PP

.SS "bool ProjectionOptions::isValidProjection (System::String^ tag)\fR [inline]\fP"

.PP
This function check if the named projection is present in the acceptable projection list\&. 
.PP
\fBParameters\fP
.RS 4
\fItag\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "bool ProjectionOptions::setList (List< System::String^>^ list)\fR [inline]\fP"

.PP
This function populates the list of the acceptable projections\&. 
.PP
\fBParameters\fP
.RS 4
\fIlist\fP This is a new list of acceptable projections
.RE
.PP
\fBReturns\fP
.RS 4
.IP "\(bu" 2
true: the list is valid;
.IP "\(bu" 2
false: the list is not valid 
.PP
.RE
.PP

.SS "bool ProjectionOptions::setProjection (\fBoptions\fP code)\fR [inline]\fP"

.PP
This function select a given projection from the projection code\&. 
.PP
\fBParameters\fP
.RS 4
\fIcode\fP the code of the selecting projection
.RE
.PP
\fBReturns\fP
.RS 4
.IP "\(bu" 2
true: the projection is valid;
.IP "\(bu" 2
false: the projection is invalid 
.PP
.RE
.PP

.SS "bool ProjectionOptions::setProjection (System::String^ tag)\fR [inline]\fP"

.PP
This function select a given projection from the string name of the projection\&. 
.PP
\fBParameters\fP
.RS 4
\fItag\fP string name of the projection
.RE
.PP
\fBReturns\fP
.RS 4
true: the projection is valid;\\nfalse: the projection is invalid
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBoptions\fP ProjectionOptions::current_projection_code\fR [private]\fP"

.PP
This is the code of the active selected projection\&. 
.SS "System::String ^ ProjectionOptions::current_projection_name\fR [private]\fP"

.PP
This is the name of the current selected projection\&. 
.SS "List<\fBoptions\fP> ^ ProjectionOptions::projection_list\fR [private]\fP"

.PP
This is the list of the acceptable projections\&. 
.SS "Dictionary<System::String^, Image^> ^ ProjectionOptions::ProjectionsIcons\fR [static]\fP, \fR [private]\fP"

.PP
This is the Image list off all the possible projections;\&. 
.SS "const cli::array<System::String^> ^ ProjectionOptions::tags\fR [static]\fP"
\fBInitial value:\fP
.nf
= gcnew cli::array<System::String^> {
        "LCC", "LFB", "LISO", "LLM", "LLMO", "LML", "LMLO", "LSIO", "RCC", "RFB", "RISO", "RLM", "RLMO", "RML", "RMLO", "RSIO",
         "LCCT", "LFBT", "LISOT", "LLMT", "LLMOT", "LMLT", "LMLOT", "LSIOT", "RCCT", "RFBT", "RISOT", "RLMT", "RLMOT", "RMLT", "RMLOT", "RSIOT",
         "LCCD", "LFBD", "LISOD", "LLMD", "LLMOD", "LMLD", "LMLOD", "LSIOD", "RCCD", "RFBD", "RISOD", "RLMD", "RLMOD", "RMLD", "RMLOD", "RSIOD",
         "LCCB", "LFBB", "LISOB", "LLMB", "LLMOB", "LMLB", "LMLOB", "LSIOB", "RCCB", "RFBB", "RISOB", "RLMB", "RLMOB", "RMLB", "RMLOB", "RSIOB",
         "LCCM", "LFBM", "LISOM", "LLMM", "LLMOM", "LMLM", "LMLOM", "LSIOM", "RCCM", "RFBM", "RISOM", "RLMM", "RLMOM", "RMLM", "RMLOM", "RSIOM",
        "UNDEF"
    }
.PP
.fi

.PP
This is a string array used to get a string name of the icon tag\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU from the source code\&.
