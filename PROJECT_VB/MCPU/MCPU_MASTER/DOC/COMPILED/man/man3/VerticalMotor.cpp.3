.TH "C:/Users/m.rispoli/Documents/Workspace/Git/mcpu_master_vs/PROJECT_VB/MCPU/MCPU_MASTER/MOTORS/VerticalMotor.cpp" 3 "Thu May 2 2024" "MCPU_MASTER Software Description" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/m.rispoli/Documents/Workspace/Git/mcpu_master_vs/PROJECT_VB/MCPU/MCPU_MASTER/MOTORS/VerticalMotor.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'CalibrationConfig\&.h'\fP
.br
\fC#include 'Notify\&.h'\fP
.br
\fC#include 'VerticalMotor\&.h'\fP
.br
\fC#include 'pd4_od\&.h'\fP
.br
\fC#include 'gantry_global_status\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBROT_PER_MM\fP   ((double) 1/ (double) 0\&.714 )"
.br
.RI "Defines the position user units in mm\&. "
.ti -1c
.RI "#define \fBLIMIT_INPUT_MASK\fP(x)   (x & \fBPD4_MOTOR_DI1\fP)"
.br
.RI "Sets the limit photocell switch input\&. "
.ti -1c
.RI "#define \fBUP_LIMIT_INPUT_MASK\fP(x)   (x & \fBPD4_MOTOR_DI1\fP)"
.br
.RI "Sets the limit photocell switch input\&. "
.ti -1c
.RI "#define \fBDOWN_LIMIT_INPUT_MASK\fP(x)   (x & \fBPD4_MOTOR_DI4\fP)"
.br
.RI "Sets the limit photocell switch input\&. "
.ti -1c
.RI "#define \fBZERO_INPUT_MASK\fP(x)   (x & \fBPD4_MOTOR_DI3\fP)"
.br
.RI "Sets the Zero photocell switch input\&. "
.ti -1c
.RI "#define \fBMAX_POSITION\fP   764"
.br
.RI "Defines the Maximum software position respect the zero setting point\&. "
.ti -1c
.RI "#define \fBMIN_POSITION\fP   100"
.br
.RI "Defines the Minimum software position respect the zero setting point\&. "
.ti -1c
.RI "#define \fBHOMING_ON_METHOD\fP   22"
.br
.RI "Zero setting approaching method starting with the Zero photocell ON\&. "
.ti -1c
.RI "#define \fBHOMING_OFF_METHOD\fP   21"
.br
.RI "Zero setting approaching method starting with the Zero photocell OFF\&. "
.ti -1c
.RI "#define \fBVERTICAL_OD_CODE\fP   0x0001"
.br
.RI "The module override this function in order to initialize specific motor registers "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define DOWN_LIMIT_INPUT_MASK(x)   (x & \fBPD4_MOTOR_DI4\fP)"

.PP
Sets the limit photocell switch input\&. 
.SS "#define HOMING_OFF_METHOD   21"

.PP
Zero setting approaching method starting with the Zero photocell OFF\&. 
.SS "#define HOMING_ON_METHOD   22"

.PP
Zero setting approaching method starting with the Zero photocell ON\&. 
.SS "#define LIMIT_INPUT_MASK(x)   (x & \fBPD4_MOTOR_DI1\fP)"

.PP
Sets the limit photocell switch input\&. 
.SS "#define MAX_POSITION   764"

.PP
Defines the Maximum software position respect the zero setting point\&. 
.SS "#define MIN_POSITION   100"

.PP
Defines the Minimum software position respect the zero setting point\&. 
.SS "#define ROT_PER_MM   ((double) 1/ (double) 0\&.714 )"

.PP
Defines the position user units in mm\&. 
.SS "#define UP_LIMIT_INPUT_MASK(x)   (x & \fBPD4_MOTOR_DI1\fP)"

.PP
Sets the limit photocell switch input\&. 
.SS "#define VERTICAL_OD_CODE   0x0001"

.PP
The module override this function in order to initialize specific motor registers 
.PP
\fBReturns\fP
.RS 4
true if the initialization termines successfully
.RE
.PP

.SS "#define ZERO_INPUT_MASK(x)   (x & \fBPD4_MOTOR_DI3\fP)"

.PP
Sets the Zero photocell switch input\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU_MASTER Software Description from the source code\&.
