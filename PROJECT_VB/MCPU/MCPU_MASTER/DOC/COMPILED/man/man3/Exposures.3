.TH "Exposures" 3 "Thu May 2 2024" "MCPU_MASTER Software Description" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Exposures \- This Class implements the Exposure data structures and the exposure worflows\&.   

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ExposureModule\&.h>\fP
.PP
Inherits \fBGenerator\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBexposure_pulse\fP"
.br
.ti -1c
.RI "class \fBtomo_data\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum class \fBexposure_type_options\fP { \fBMAN_2D\fP =0, \fBAEC_2D\fP, \fBMAN_3D\fP, \fBAEC_3D\fP, \fBMAN_COMBO\fP, \fBAEC_COMBO\fP, \fBMAN_AE\fP, \fBAEC_AE\fP, \fBTEST_2D\fP, \fBEXP_NOT_DEFINED\fP }"
.br
.RI "This is the enumeration class defining all the possible exposures "
.ti -1c
.RI "enum class \fBcompression_mode_option\fP { \fBCMP_KEEP\fP = 0, \fBCMP_RELEASE\fP, \fBCMP_DISABLE\fP }"
.br
.RI "This is the enumeration of the possible Compression modes\&. "
.ti -1c
.RI "enum class \fBarm_mode_option\fP { \fBARM_ENA\fP = 0, \fBARM_DIS\fP }"
.br
.RI "This is the enumeration of the possible ARM usage during exposure "
.ti -1c
.RI "enum class \fBpatient_protection_option\fP { \fBPROTECTION_ENA\fP = 0, \fBPROTECTION_DIS\fP }"
.br
.RI "This is the enumeration of the possible Patient Protection usage during exposure "
.ti -1c
.RI "enum class \fBexposure_completed_options\fP { \fBXRAY_SUCCESS\fP = 0, \fBXRAY_PARTIAL_DOSE\fP = 1, \fBXRAY_NO_DOSE\fP = 2 }"
.br
.RI "This Enumeration class describes the possible results of an exposure\&. "
.ti -1c
.RI "enum class \fBexposure_completed_errors\fP { \fBXRAY_NO_ERRORS\fP = (int) Generator::generator_errors::GEN_NO_ERRORS, \fBXRAY_BUTTON_RELEASE\fP = (int)Generator::generator_errors::GEN_BUTTON_RELEASE, \fBXRAY_TIMEOUT\fP = (int) Generator::generator_errors::GEN_TIMEOUT, \fBXRAY_COMMUNICATION_ERROR\fP = (int)Generator::generator_errors::GEN_COMMUNICATION_ERROR, \fBXRAY_INVALID_GENERATOR_STATUS\fP = (int) Generator::generator_errors::GEN_INVALID_STATUS, \fBXRAY_ERR_CODE\fP = (int)Generator::generator_errors::GEN_LAST_ERRCODE, \fBXRAY_INVALID_2D_PARAMETERS\fP, \fBXRAY_INVALID_TOMO_PARAMETERS\fP, \fBXRAY_TIMEOUT_TILT_IN_HOME\fP, \fBXRAY_ERROR_TILT_IN_HOME\fP, \fBXRAY_GRID_ERROR\fP, \fBXRAY_COLLI_FORMAT_ERROR\fP, \fBXRAY_TIMEOUT_AEC\fP, \fBXRAY_POSITIONING_ERROR\fP, \fBXRAY_FILTER_ERROR\fP, \fBXRAY_TUBE_TEMPERATURE\fP, \fBXRAY_INVALID_PROCEDURE\fP }"
.br
.RI "This class enumerates all the possible x-ray error reasons "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBGenerator\fP ^ \fBgetDevice\fP (void)"
.br
.ti -1c
.RI "static void \fBsetExposureMode\fP (\fBexposure_type_options\fP mode)"
.br
.ti -1c
.RI "static \fBexposure_type_options\fP \fBgetExposureMode\fP (void)"
.br
.ti -1c
.RI "static void \fBsetDetectorType\fP (\fBDetectorConfig::detector_model_option\fP detector)"
.br
.ti -1c
.RI "static \fBDetectorConfig::detector_model_option\fP \fBgetDetectorType\fP (void)"
.br
.ti -1c
.RI "static void \fBsetCompressorMode\fP (\fBcompression_mode_option\fP mode)"
.br
.ti -1c
.RI "static \fBcompression_mode_option\fP \fBgetCompressorMode\fP (void)"
.br
.ti -1c
.RI "static void \fBsetProtectionMode\fP (\fBpatient_protection_option\fP mode)"
.br
.ti -1c
.RI "static \fBpatient_protection_option\fP \fBgetProtectionMode\fP (void)"
.br
.ti -1c
.RI "static void \fBsetArmMode\fP (\fBarm_mode_option\fP mode)"
.br
.ti -1c
.RI "static \fBarm_mode_option\fP \fBgetArmMode\fP (void)"
.br
.ti -1c
.RI "static bool \fBsetExposurePulse\fP (unsigned char seq, \fBexposure_pulse\fP^ pls)"
.br
.ti -1c
.RI "static bool \fBsetExposedPulse\fP (unsigned char seq, \fBexposure_pulse\fP^ pls)"
.br
.ti -1c
.RI "static \fBexposure_pulse\fP ^ \fBgetExposedPulse\fP (unsigned char seq)"
.br
.ti -1c
.RI "static \fBexposure_pulse\fP ^ \fBgetExposurePulse\fP (unsigned char seq)"
.br
.ti -1c
.RI "static bool \fBisXrayCompleted\fP ()"
.br
.ti -1c
.RI "static bool \fBisXrayRunning\fP ()"
.br
.ti -1c
.RI "static void \fBclearXrayCompleted\fP ()"
.br
.ti -1c
.RI "static void \fBsetXrayCompletedFlag\fP ()"
.br
.ti -1c
.RI "static \fBexposure_completed_errors\fP \fBgetExposureCompletedError\fP (void)"
.br
.ti -1c
.RI "static \fBexposure_completed_options\fP \fBgetExposureCompletedCode\fP (void)"
.br
.ti -1c
.RI "static void \fBsetCompletedError\fP (\fBexposure_completed_errors\fP err)"
.br
.ti -1c
.RI "static void \fBsetCompletedCode\fP (\fBexposure_completed_options\fP code)"
.br
.ti -1c
.RI "static \fBtomo_data\fP ^ \fBgetTomoExposure\fP (void)"
.br
.ti -1c
.RI "static void \fBenableXrayPushButtonEvent\fP (bool stat)"
.br
.ti -1c
.RI "static bool \fBgetXrayPushButtonEvent\fP (void)"
.br
.ti -1c
.RI "static void \fBreset\fP (void)"
.br
.ti -1c
.RI "static bool \fBstartExposure\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "literal unsigned char \fBFOCUS_LARGE\fP = 0"
.br
.ti -1c
.RI "literal unsigned char \fBFOCUS_SMALL\fP = 1"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBexposureManagementLoop\fP (bool demo) override"
.br
.RI "This function is called in the \fBGenerator\fP Idle status in order to handle an Exposure procedure\&. "
.ti -1c
.RI "void \fBsetXrayEnable\fP (bool stat) override"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBexposure_completed_errors\fP \fBman_2d_exposure_procedure\fP (bool demo)"
.br
.ti -1c
.RI "\fBexposure_completed_errors\fP \fBaec_2d_exposure_procedure\fP (bool demo)"
.br
.ti -1c
.RI "\fBexposure_completed_errors\fP \fBman_ae_exposure_procedure\fP (bool demo)"
.br
.ti -1c
.RI "\fBexposure_completed_errors\fP \fBaec_ae_exposure_procedure\fP (bool demo)"
.br
.ti -1c
.RI "\fBexposure_completed_errors\fP \fBman_3d_exposure_procedure\fP (bool demo)"
.br
.ti -1c
.RI "\fBexposure_completed_errors\fP \fBaec_3d_exposure_procedure\fP (bool demo)"
.br
.ti -1c
.RI "\fBexposure_completed_errors\fP \fBman_combo_exposure_procedure\fP (bool demo)"
.br
.ti -1c
.RI "\fBexposure_completed_errors\fP \fBaec_combo_exposure_procedure\fP (bool demo)"
.br
.ti -1c
.RI "\fBexposure_completed_errors\fP \fBtest_exposure_procedure\fP (bool demo)"
.br
.ti -1c
.RI "void \fBsetExposedData\fP (unsigned char databank_index, unsigned char pulse_seq, \fBPCB315::filterMaterialCodes\fP ft, unsigned char fc)"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static cli::array< \fBexposure_pulse\fP^> ^ \fBpulse\fP = gcnew array<\fBexposure_pulse\fP^> {gcnew \fBexposure_pulse\fP (),gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP() }"
.br
.ti -1c
.RI "static cli::array< \fBexposure_pulse\fP^> ^ \fBexposed\fP = gcnew array<\fBexposure_pulse\fP^> {gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP() }"
.br
.ti -1c
.RI "static \fBexposure_type_options\fP \fBexposure_type\fP = \fBexposure_type_options::EXP_NOT_DEFINED\fP"
.br
.ti -1c
.RI "static \fBarm_mode_option\fP \fBarm_mode\fP = \fBarm_mode_option::ARM_ENA\fP"
.br
.ti -1c
.RI "static \fBcompression_mode_option\fP \fBcompressor_mode\fP = \fBcompression_mode_option::CMP_KEEP\fP"
.br
.ti -1c
.RI "static \fBpatient_protection_option\fP \fBprotection_mode\fP = \fBpatient_protection_option::PROTECTION_ENA\fP"
.br
.ti -1c
.RI "static \fBDetectorConfig::detector_model_option\fP \fBdetector_model\fP = \fBDetectorConfig::detector_model_option::GENERIC\fP"
.br
.ti -1c
.RI "static \fBexposure_type_options\fP \fBxray_exposure_type\fP = \fBexposure_type_options::EXP_NOT_DEFINED\fP"
.br
.ti -1c
.RI "static \fBtomo_data\fP ^ \fBtomo_exposure\fP = gcnew \fBtomo_data\fP"
.br
.ti -1c
.RI "static bool \fBxray_event_ena\fP = false"
.br
.ti -1c
.RI "static bool \fBxray_completed\fP = true"
.br
.ti -1c
.RI "static bool \fBxray_processing\fP = false"
.br
.ti -1c
.RI "static \fBexposure_completed_options\fP \fBxray_completed_code\fP = \fBexposure_completed_options::XRAY_NO_DOSE\fP"
.br
.ti -1c
.RI "static \fBexposure_completed_errors\fP \fBxray_exposure_error\fP = \fBexposure_completed_errors::XRAY_NO_ERRORS\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This Class implements the Exposure data structures and the exposure worflows\&.  
.SH "Member Enumeration Documentation"
.PP 
.SS "enum class \fBExposures::arm_mode_option\fP\fC [strong]\fP"

.PP
This is the enumeration of the possible ARM usage during exposure 
.IP "\(bu" 2
ARM_ENA: The ARM shall be in a position defined by the Acquisition software;
.IP "\(bu" 2
ARM_DIS: The ARM can be in a arbitrary position;
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIARM_ENA \fP\fP
Enables the Angle range check during exposure;\&. 
.TP
\fB\fIARM_DIS \fP\fP
Disables the Angle range check during the exposure; 
.br
 
.SS "enum class \fBExposures::compression_mode_option\fP\fC [strong]\fP"

.PP
This is the enumeration of the possible Compression modes\&. 
.IP "\(bu" 2
CMP_KEEP: The commpressor paddle is not released after exposure;
.IP "\(bu" 2
CMP_RELEASE: The coompressor paddle is released after exposure;
.IP "\(bu" 2
CMP_DISABLE: The compression is not necessary (but can be applied) for the current exposure\&.
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICMP_KEEP \fP\fP
Keeps the compression after exposure;\&. 
.TP
\fB\fICMP_RELEASE \fP\fP
Releases the compression after exposure;\&. 
.TP
\fB\fICMP_DISABLE \fP\fP
Disables the Compression check (for exposures without the compression);\&. 
.SS "enum class \fBExposures::exposure_completed_errors\fP\fC [strong]\fP"

.PP
This class enumerates all the possible x-ray error reasons 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIXRAY_NO_ERRORS \fP\fP
No error code\&. 
.TP
\fB\fIXRAY_BUTTON_RELEASE \fP\fP
The X-Ray Button has been released 
.br
 
.TP
\fB\fIXRAY_TIMEOUT \fP\fP
Timeout generator sequence\&. 
.TP
\fB\fIXRAY_COMMUNICATION_ERROR \fP\fP
A generator command is failed 
.br
 
.TP
\fB\fIXRAY_INVALID_GENERATOR_STATUS \fP\fP
The generator is in a not expected status 
.br
 
.TP
\fB\fIXRAY_ERR_CODE \fP\fP
Initialize the ExposureModule error codes 
.br
 
.TP
\fB\fIXRAY_INVALID_2D_PARAMETERS \fP\fP
The pexposure parameters for 2D are incorrect\&. 
.TP
\fB\fIXRAY_INVALID_TOMO_PARAMETERS \fP\fP
The Tomo parameters has not been validated (selected) 
.br
 
.TP
\fB\fIXRAY_TIMEOUT_TILT_IN_HOME \fP\fP
Timeout waiting for the Tilt to be ready for home positioning\&. 
.TP
\fB\fIXRAY_ERROR_TILT_IN_HOME \fP\fP
Error in positionining the Tilt in Home 
.br
 
.TP
\fB\fIXRAY_GRID_ERROR \fP\fP
The Grid device is in error condition\&. 
.TP
\fB\fIXRAY_COLLI_FORMAT_ERROR \fP\fP
The current collimation format is not valid 
.br
 
.TP
\fB\fIXRAY_TIMEOUT_AEC \fP\fP
Timeout waiting the Main Pulse data after an AEC pre pulse\&. 
.TP
\fB\fIXRAY_POSITIONING_ERROR \fP\fP
Error in ARM or Tilt positioning\&. 
.TP
\fB\fIXRAY_FILTER_ERROR \fP\fP
Error in selecting the filter for the exposure\&. 
.TP
\fB\fIXRAY_TUBE_TEMPERATURE \fP\fP
Error the Tube is in fault condition\&. 
.TP
\fB\fIXRAY_INVALID_PROCEDURE \fP\fP
Error non defined procedure has been requested\&. 
.SS "enum class \fBExposures::exposure_completed_options\fP\fC [strong]\fP"

.PP
This Enumeration class describes the possible results of an exposure\&. 
.IP "\(bu" 2
XRAY_SUCCESS: All the expected exposure's pulses has been successfully executed;
.IP "\(bu" 2
XRAY_PARTIAL_DOSE: the exposure has been partially executed\&.
.IP "\(bu" 2
XRAY_NO_DOSE: The exposure is early terminated without dose released to the patient\&.
.IP "\(bu" 2
XRAY_EXECUTING: The X-RAY sequence is still running
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIXRAY_SUCCESS \fP\fP
XRAY sequence successfully completed\&. 
.TP
\fB\fIXRAY_PARTIAL_DOSE \fP\fP
XRAY sequence partially completed\&. 
.TP
\fB\fIXRAY_NO_DOSE \fP\fP
XRAY sequence aborted without dose 
.br
 
.SS "enum class \fBExposures::exposure_type_options\fP\fC [strong]\fP"

.PP
This is the enumeration class defining all the possible exposures 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAN_2D \fP\fP
The next exposure is a 2D manual mode\&. 
.TP
\fB\fIAEC_2D \fP\fP
The next exposure is a 2D with AEC\&. 
.TP
\fB\fIMAN_3D \fP\fP
The next exposure is a Tomo 3D in manual mode\&. 
.TP
\fB\fIAEC_3D \fP\fP
The next exposure is a Tomo 3D with AEC\&. 
.TP
\fB\fIMAN_COMBO \fP\fP
The next exposure is a Manual Combo\&. 
.TP
\fB\fIAEC_COMBO \fP\fP
The next exposure is a Combo with AEC\&. 
.TP
\fB\fIMAN_AE \fP\fP
The next exposure is a Dual energy exposure in manual mode\&. 
.TP
\fB\fIAEC_AE \fP\fP
The next exposure is a Dual energy with AEC 
.br
 
.TP
\fB\fITEST_2D \fP\fP
This is a test exposure without Detector synch\&. 
.TP
\fB\fIEXP_NOT_DEFINED \fP\fP
.SS "enum class \fBExposures::patient_protection_option\fP\fC [strong]\fP"

.PP
This is the enumeration of the possible Patient Protection usage during exposure 
.IP "\(bu" 2
PROTECTION_ENA: The Patient protection shall be present during exposure;
.IP "\(bu" 2
PROTECTION_DIS: The patient protection can be removed during exposure;
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIPROTECTION_ENA \fP\fP
Enables the Patient protection check;\&. 
.TP
\fB\fIPROTECTION_DIS \fP\fP
Disables the Patient protection check; 
.br
 
.SH "Member Function Documentation"
.PP 
.SS "\fBExposures::exposure_completed_errors\fP Exposures::aec_2d_exposure_procedure (bool demo)\fC [private]\fP"

.SS "\fBExposures::exposure_completed_errors\fP Exposures::aec_3d_exposure_procedure (bool demo)\fC [private]\fP"

.SS "\fBExposures::exposure_completed_errors\fP Exposures::aec_ae_exposure_procedure (bool demo)\fC [private]\fP"

.SS "\fBExposures::exposure_completed_errors\fP Exposures::aec_combo_exposure_procedure (bool demo)\fC [private]\fP"

.SS "static void Exposures::clearXrayCompleted ()\fC [inline]\fP, \fC [static]\fP"

.SS "static void Exposures::enableXrayPushButtonEvent (bool stat)\fC [inline]\fP, \fC [static]\fP"

.SS "void Exposures::exposureManagementLoop (bool demo)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
This function is called in the \fBGenerator\fP Idle status in order to handle an Exposure procedure\&. The Procedure handle the activation and the completion of any exposure procedure:
.PP
The application should have used the dedicated API routine to activate an exposure sequence: the ExposureModule class provides all the API to prrepare and select the further exposure procedure\&.
.PP
This function:
.IP "\(bu" 2
Resets the internal and external Exposed-Pulse data structures:
.IP "  \(bu" 4
Those structure will be filled, after the exposure completion, with the actual exposed parameters like kV, mAs,\&.\&.
.PP

.IP "\(bu" 2
Checks for the XRAY-push button activation;
.IP "\(bu" 2
Checks for the Tube temperature validity;
.IP "\(bu" 2
Pre-select the current filter that will be used;
.IP "\(bu" 2
Starts the dedicated exsposure procedure;
.IP "\(bu" 2
Evaluates the exposure completion code;
.IP "\(bu" 2
If requested, interact with the Acquisition software to signal the exposure completion event;
.IP "\(bu" 2
Handles the final status of the compressor device (keep compression or release);
.PP

.PP
Reimplemented from \fBGenerator\fP\&.
.SS "static \fBarm_mode_option\fP Exposures::getArmMode (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBcompression_mode_option\fP Exposures::getCompressorMode (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBDetectorConfig::detector_model_option\fP Exposures::getDetectorType (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBGenerator\fP ^ Exposures::getDevice (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBexposure_pulse\fP ^ Exposures::getExposedPulse (unsigned char seq)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBexposure_completed_options\fP Exposures::getExposureCompletedCode (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBexposure_completed_errors\fP Exposures::getExposureCompletedError (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBexposure_type_options\fP Exposures::getExposureMode (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBexposure_pulse\fP ^ Exposures::getExposurePulse (unsigned char seq)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBpatient_protection_option\fP Exposures::getProtectionMode (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static \fBtomo_data\fP ^ Exposures::getTomoExposure (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool Exposures::getXrayPushButtonEvent (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool Exposures::isXrayCompleted ()\fC [inline]\fP, \fC [static]\fP"

.SS "static bool Exposures::isXrayRunning ()\fC [inline]\fP, \fC [static]\fP"

.SS "\fBExposures::exposure_completed_errors\fP Exposures::man_2d_exposure_procedure (bool demo)\fC [private]\fP"

.SS "\fBExposures::exposure_completed_errors\fP Exposures::man_3d_exposure_procedure (bool demo)\fC [private]\fP"

.SS "\fBExposures::exposure_completed_errors\fP Exposures::man_ae_exposure_procedure (bool demo)\fC [private]\fP"

.SS "\fBExposures::exposure_completed_errors\fP Exposures::man_combo_exposure_procedure (bool demo)\fC [private]\fP"

.SS "static void Exposures::reset (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static void Exposures::setArmMode (\fBarm_mode_option\fP mode)\fC [inline]\fP, \fC [static]\fP"

.SS "static void Exposures::setCompletedCode (\fBexposure_completed_options\fP code)\fC [inline]\fP, \fC [static]\fP"

.SS "static void Exposures::setCompletedError (\fBexposure_completed_errors\fP err)\fC [inline]\fP, \fC [static]\fP"

.SS "static void Exposures::setCompressorMode (\fBcompression_mode_option\fP mode)\fC [inline]\fP, \fC [static]\fP"

.SS "static void Exposures::setDetectorType (\fBDetectorConfig::detector_model_option\fP detector)\fC [inline]\fP, \fC [static]\fP"

.SS "void Exposures::setExposedData (unsigned char databank_index, unsigned char pulse_seq, \fBPCB315::filterMaterialCodes\fP ft, unsigned char fc)\fC [private]\fP"

.PP
This function gets the data pulses received by the generator during the single Pulse sequence and store it into the exposure pulse sequence number data structure\&. 
.PP
Every Exposure sequence can be composed with a max of four singlePulses\&. Those pulses are referred in the application as pulse-0 to pulse-3\&.
.PP
The application gets the executed pulse exposure data (kv, mAs, \&.\&.) reading the data in the class ExposureModule::exposed after the exposure completed\&.
.PP
The actual exposed data are collected internally by the genberator module into the R2CP::CaDataDicGen::GetInstance()->executed_pulses[i] vector where i is the databank index passed to the Procedure definition\&.
.PP
This function is called after every single-pulse sequence to properly upload the Application data structure with the internal collected exposure data\&.
.PP
\fBParameters\fP
.RS 4
\fIdatabank_index\fP This is the index assigned to the current data-bank in the procedure
.br
The index is not the number of the databank (i\&.e\&. R2CP::DB_Pre or R2CP::DB_Pulse)
.br
The index is the number assigned to it when the databank is assigne to a procedure
.RE
.PP
Example:
.br
R2CP::CaDataDicGen::GetInstance()->Generator_AssignDbToProc(R2CP::DB_Pulse, R2CP::ProcId_Standard_Mammography_2D, 1);
.IP "\(bu" 2
in this example 1 is the index to be used! 
.br

.PP
.PP
\fBParameters\fP
.RS 4
\fIpulse_seq\fP This is the current pulse sequence (0 to 3) 
.br
\fIft\fP Filter used in the exposure
.br
\fIfc\fP This is the focus used in the exposure
.RE
.PP

.SS "static bool Exposures::setExposedPulse (unsigned char seq, \fBexposure_pulse\fP^ pls)\fC [inline]\fP, \fC [static]\fP"

.SS "static void Exposures::setExposureMode (\fBexposure_type_options\fP mode)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool Exposures::setExposurePulse (unsigned char seq, \fBexposure_pulse\fP^ pls)\fC [inline]\fP, \fC [static]\fP"

.SS "static void Exposures::setProtectionMode (\fBpatient_protection_option\fP mode)\fC [inline]\fP, \fC [static]\fP"

.SS "static void Exposures::setXrayCompletedFlag ()\fC [inline]\fP, \fC [static]\fP"

.SS "void Exposures::setXrayEnable (bool stat)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBGenerator\fP\&.
.SS "bool Exposures::startExposure (void)\fC [static]\fP"

.SS "\fBExposures::exposure_completed_errors\fP Exposures::test_exposure_procedure (bool demo)\fC [private]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBarm_mode_option\fP Exposures::arm_mode = \fBarm_mode_option::ARM_ENA\fP\fC [static]\fP, \fC [private]\fP"

.SS "\fBcompression_mode_option\fP Exposures::compressor_mode = \fBcompression_mode_option::CMP_KEEP\fP\fC [static]\fP, \fC [private]\fP"

.SS "\fBDetectorConfig::detector_model_option\fP Exposures::detector_model = \fBDetectorConfig::detector_model_option::GENERIC\fP\fC [static]\fP, \fC [private]\fP"

.SS "cli::array<\fBexposure_pulse\fP^> ^ Exposures::exposed = gcnew array<\fBexposure_pulse\fP^> {gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP() }\fC [static]\fP, \fC [private]\fP"

.SS "\fBexposure_type_options\fP Exposures::exposure_type = \fBexposure_type_options::EXP_NOT_DEFINED\fP\fC [static]\fP, \fC [private]\fP"

.SS "literal unsigned char Exposures::FOCUS_LARGE = 0"

.SS "literal unsigned char Exposures::FOCUS_SMALL = 1"

.SS "\fBpatient_protection_option\fP Exposures::protection_mode = \fBpatient_protection_option::PROTECTION_ENA\fP\fC [static]\fP, \fC [private]\fP"

.SS "cli::array<\fBexposure_pulse\fP^> ^ Exposures::pulse = gcnew array<\fBexposure_pulse\fP^> {gcnew \fBexposure_pulse\fP (),gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP(), gcnew \fBexposure_pulse\fP() }\fC [static]\fP, \fC [private]\fP"

.SS "\fBtomo_data\fP ^ Exposures::tomo_exposure = gcnew \fBtomo_data\fP\fC [static]\fP, \fC [private]\fP"

.SS "bool Exposures::xray_completed = true\fC [static]\fP, \fC [private]\fP"

.SS "\fBexposure_completed_options\fP Exposures::xray_completed_code = \fBexposure_completed_options::XRAY_NO_DOSE\fP\fC [static]\fP, \fC [private]\fP"

.SS "bool Exposures::xray_event_ena = false\fC [static]\fP, \fC [private]\fP"

.SS "\fBexposure_completed_errors\fP Exposures::xray_exposure_error = \fBexposure_completed_errors::XRAY_NO_ERRORS\fP\fC [static]\fP, \fC [private]\fP"

.SS "\fBexposure_type_options\fP Exposures::xray_exposure_type = \fBexposure_type_options::EXP_NOT_DEFINED\fP\fC [static]\fP, \fC [private]\fP"

.SS "bool Exposures::xray_processing = false\fC [static]\fP, \fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU_MASTER Software Description from the source code\&.
