.TH "BodyMotor" 3 "Mon Sep 30 2024" "MCPU" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BodyMotor \- This is the Body Module class implementation 

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <BodyMotor\&.h>\fP
.PP
Inherits \fBCANOPEN::CanOpenMotor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBodyMotor\fP (void)"
.br
.RI "This is the class constructor\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBstartManualHoming\fP (int target_position)"
.br
.ti -1c
.RI "static bool \fBstartAutoHoming\fP ()"
.br
.RI "This function activates the External Sensor calibration Homing procedure "
.ti -1c
.RI "static bool \fBserviceAutoPosition\fP (int pos)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBBodyMotor\fP ^ \fBdevice\fP = gcnew \fBBodyMotor\fP()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "unsigned short \fBinitializeSpecificObjectDictionaryCallback\fP (void) override"
.br
.RI "Override this function to initialize specific registers of the target Motor Device\&. "
.ti -1c
.RI "\fBMotorCompletedCodes\fP \fBrunningCallback\fP (\fBMotorCommands\fP current_command, int current_position, int target_position) override"
.br
.RI "This function is called just before to Power the motor phases\&. "
.ti -1c
.RI "\fBMotorCompletedCodes\fP \fBidleCallback\fP (void) override"
.br
.RI "The \fBBodyMotor\fP class override this function in order to handle the IDLE activities "
.ti -1c
.RI "void \fBfaultCallback\fP (bool errstat, bool data_changed, unsigned int error_class, unsigned int error_code) override"
.br
.ti -1c
.RI "bool \fBbrakeCallback\fP (void) override"
.br
.RI "Called whenever the optional brake device should be reactivated 
.br
 "
.ti -1c
.RI "bool \fBunbrakeCallback\fP (void) override"
.br
.RI "Called whenever the optional brake device should be released\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This is the Body Module class implementation
.SH "Constructor & Destructor Documentation"
.PP 
.SS "BodyMotor::BodyMotor (void)"

.PP
This is the class constructor\&. The Constructor:
.IP "\(bu" 2
Initializes the CanOpenMotor base class:
.IP "  \(bu" 4
Set the motor address;
.IP "  \(bu" 4
Set The module name;
.IP "  \(bu" 4
Set The unit conversion coefficient
.PP

.IP "\(bu" 2
Set the target acceptable precision range;
.IP "\(bu" 2
Initializes the encoder initial position from the configuration file;
.PP

.SH "Member Function Documentation"
.PP 
.SS "bool BodyMotor::brakeCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Called whenever the optional brake device should be reactivated 
.br
 
.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "void BodyMotor::faultCallback (bool errstat, bool data_changed, unsigned int error_class, unsigned int error_code)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "\fBCanOpenMotor::MotorCompletedCodes\fP BodyMotor::idleCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
The \fBBodyMotor\fP class override this function in order to handle the IDLE activities 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "unsigned short BodyMotor::initializeSpecificObjectDictionaryCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Override this function to initialize specific registers of the target Motor Device\&. 
.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "\fBBodyMotor::MotorCompletedCodes\fP BodyMotor::runningCallback (\fBMotorCommands\fP current_command, int current_position, int target_position)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
This function is called just before to Power the motor phases\&. 
.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "bool BodyMotor::startAutoHoming (void)\fC [static]\fP"

.PP
This function activates the External Sensor calibration Homing procedure 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "bool BodyMotor::unbrakeCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Called whenever the optional brake device should be released\&. 
.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU from the source code\&.
