.TH "CaDataDic" 3 "MCPU" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CaDataDic \- Class to handle any \fBR2CP\fP dictionary\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <CaDataDic\&.h>\fP
.PP
Inherited by \fBR2CP::CaDataDicGen\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCaDataDic\fP (unsigned char Node)"
.br
.RI "Constructor of the class\&. "
.ti -1c
.RI "virtual \fB~CaDataDic\fP ()"
.br
.RI "Destructor of the class\&. "
.ti -1c
.RI "unsigned char \fBDataDicCheckAndCall\fP (unsigned char Index, unsigned char SubIndex, unsigned char Node, \fBtDataDicAccess\fP Access, unsigned char *pData, unsigned short Size, \fBtInfoMessage\fP *infomessage=nullptr)"
.br
.RI "Checks access to the dictionary and calls related function according to parameters passed\&. "
.ti -1c
.RI "virtual bool \fBCheck_NotAvailable_Message_vs_Status\fP (unsigned short index, unsigned short subindex, \fBtInfoMessage\fP *MessageInfo)"
.br
.RI "Function to know if the message is available for the current state\&. "
.ti -1c
.RI "virtual bool \fBHeartbeatGot\fP (unsigned char node, unsigned char keyWord, unsigned char status)=0"
.br
.RI "Called by \fBR2CP\fP protocol after getting HEARTBEAT function message\&.\&. "
.ti -1c
.RI "virtual bool \fBDownloadGot\fP (unsigned short target_id, unsigned char *pData, unsigned short Size)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBtDataDicHwVersion\fP \fBmHwVersion\fP"
.br
.RI "Stores Hardware version field\&. Format: A3616-01-0\&. "
.ti -1c
.RI "\fBtDataDicSwVersion\fP \fBmSwVersion\fP"
.br
.RI "Stores Software version field\&. Format: V1R01\&.1\&. "
.ti -1c
.RI "\fBtDataDicSwVersion\fP \fBmBootVersion\fP"
.br
.RI "Stores Bootloader version field\&. Format: V1R01\&.1\&. "
.ti -1c
.RI "\fBtDataDicStatusRegister\fP \fBmStatusRegister\fP"
.br
.RI "Stores \fBR2CP\fP status register\&. "
.ti -1c
.RI "\fBtDataDicProtocolVersion\fP \fBmProtocolVersion\fP"
.br
.RI "Stores protocol version field\&. Format: V1\&.1 R A\&. "
.ti -1c
.RI "char * \fBm_pPackageVersion\fP"
.br
.RI "Stores protocol version field\&. Format: V1\&.1 R A\&. "
.ti -1c
.RI "unsigned char \fBmPipeSubNodeId\fP"
.br
.RI "Stores pipe node id\&. "
.ti -1c
.RI "unsigned char \fBmPipeInterfaceNumber\fP"
.br
.RI "Stores pipe interface number\&. "
.ti -1c
.RI "char * \fBm_pSerialNumber\fP"
.br
.RI "Stores serial number of the node/equipment\&. "
.ti -1c
.RI "char * \fBm_pDescription\fP"
.br
.RI "Stores a short description of a node\&. "
.ti -1c
.RI "unsigned short \fBmHeartBeatTime\fP"
.br
.RI "Stores heartbeat time out\&. Units (mS)\&. "
.ti -1c
.RI "unsigned char \fBmNodeId\fP"
.br
.RI "Stores \fBR2CP\fP node id of the dictionary\&. 0 is reserved for broadcast and 4 for HCS12 bootloader\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "const \fBtTable\fP * \fBpDataDictionary\fP"
.br
.RI "Mutex pointer\&. "
.in -1c
.SH "Detailed Description"
.PP 
Class to handle any \fBR2CP\fP dictionary\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "CaDataDic::CaDataDic (unsigned char Node)"

.PP
Constructor of the class\&. 
.SS "CaDataDic::~CaDataDic ()\fR [virtual]\fP"

.PP
Destructor of the class\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual bool CaDataDic::Check_NotAvailable_Message_vs_Status (unsigned short index, unsigned short subindex, \fBtInfoMessage\fP * MessageInfo)\fR [inline]\fP, \fR [virtual]\fP"

.PP
Function to know if the message is available for the current state\&. 
.PP
\fBParameters\fP
.RS 4
\fIIndex\fP Dictionary Index 
.br
\fISubIndex\fP Dictionary SubIndex 
.RE
.PP
\fBReturns\fP
.RS 4
Accessible True; Otherwise False 
.RE
.PP

.PP
Reimplemented in \fBR2CP::CaDataDicGen\fP\&.
.SS "unsigned char CaDataDic::DataDicCheckAndCall (unsigned char Index, unsigned char SubIndex, unsigned char Node, \fBtDataDicAccess\fP Access, unsigned char * pData, unsigned short Size, \fBtInfoMessage\fP * infomessage = \fRnullptr\fP)"

.PP
Checks access to the dictionary and calls related function according to parameters passed\&. 
.PP
\fBParameters\fP
.RS 4
\fIIndex\fP Index of the dictionary entry\&. 
.br
 
.br
\fISubIndex\fP Subindex of the dictionary entry\&. 
.br
\fINode\fP Node Id of the dictionary\&. 
.br
\fIpData\fP Data for the access\&. 
.br
\fISize\fP Data size for the access\&. 
.br
\fIinfomessage\fP In case any extra param has to be passed to the dictionary 
.RE
.PP
\fBReturns\fP
.RS 4
- false If it was succesful
.IP "\(bu" 2
true If not 
.PP
.RE
.PP
The binary searching works if the DATADIC is sorted
.SS "virtual bool CaDataDic::DownloadGot (unsigned short target_id, unsigned char * pData, unsigned short Size)\fR [inline]\fP, \fR [virtual]\fP"

.PP
\fBParameters\fP
.RS 4
\fItarget_id\fP Keyword to know if the firmware is adjusted to the target board 
.br
\fIpData\fP Data for the access\&. param [in] Size Data size for the access\&. 
.RE
.PP
\fBReturns\fP
.RS 4
- false If it was succesful
.IP "\(bu" 2
true If not 
.br
 
.PP
.RE
.PP

.SS "virtual bool CaDataDic::HeartbeatGot (unsigned char node, unsigned char keyWord, unsigned char status)\fR [pure virtual]\fP"

.PP
Called by \fBR2CP\fP protocol after getting HEARTBEAT function message\&.\&. 
.PP
\fBParameters\fP
.RS 4
\fINode\fP Node Id of the dictionary\&. 
.br
\fIkeyWord\fP Keyword of the HEARTBEAT message got\&. 
.br
\fIstatus\fP Status of the node which is carried on the HEARTBEAT message got\&. 
.RE
.PP
\fBReturns\fP
.RS 4
- false If it was succesful
.IP "\(bu" 2
true If not 
.PP
.RE
.PP

.PP
Implemented in \fBR2CP::CaDataDicGen\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "char* CaDataDic::m_pDescription"

.PP
Stores a short description of a node\&. 
.SS "char* CaDataDic::m_pPackageVersion"

.PP
Stores protocol version field\&. Format: V1\&.1 R A\&. 
.SS "char* CaDataDic::m_pSerialNumber"

.PP
Stores serial number of the node/equipment\&. 
.SS "\fBtDataDicSwVersion\fP CaDataDic::mBootVersion"

.PP
Stores Bootloader version field\&. Format: V1R01\&.1\&. 
.SS "unsigned short CaDataDic::mHeartBeatTime"

.PP
Stores heartbeat time out\&. Units (mS)\&. 
.SS "\fBtDataDicHwVersion\fP CaDataDic::mHwVersion"

.PP
Stores Hardware version field\&. Format: A3616-01-0\&. 
.SS "unsigned char CaDataDic::mNodeId"

.PP
Stores \fBR2CP\fP node id of the dictionary\&. 0 is reserved for broadcast and 4 for HCS12 bootloader\&. 
.SS "unsigned char CaDataDic::mPipeInterfaceNumber"

.PP
Stores pipe interface number\&. 
.SS "unsigned char CaDataDic::mPipeSubNodeId"

.PP
Stores pipe node id\&. 
.SS "\fBtDataDicProtocolVersion\fP CaDataDic::mProtocolVersion"

.PP
Stores protocol version field\&. Format: V1\&.1 R A\&. 
.SS "\fBtDataDicStatusRegister\fP CaDataDic::mStatusRegister"

.PP
Stores \fBR2CP\fP status register\&. 
.SS "\fBtDataDicSwVersion\fP CaDataDic::mSwVersion"

.PP
Stores Software version field\&. Format: V1R01\&.1\&. 
.SS "const \fBtTable\fP* CaDataDic::pDataDictionary\fR [protected]\fP"

.PP
Mutex pointer\&. 
.PP
\fBParameters\fP
.RS 4
\fI\fP 
.RE
.PP
Stores entries of the dictionary\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU from the source code\&.
