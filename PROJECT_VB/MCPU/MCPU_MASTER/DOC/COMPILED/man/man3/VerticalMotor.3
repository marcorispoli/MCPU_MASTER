.TH "VerticalMotor" 3 "Fri Dec 15 2023" "MCPU_MASTER Software Description" \" -*- nroff -*-
.ad l
.nh
.SH NAME
VerticalMotor \- This is the Vertical Module class implementation 

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <VerticalMotor\&.h>\fP
.PP
Inherits \fBCANOPEN::CanOpenMotor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVerticalMotor\fP (void)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBactivateIsocentricCorrection\fP (int id, int delta_target)"
.br
.RI "This command activates the isocentric correction\&. "
.ti -1c
.RI "static bool \fBstartHoming\fP (void)"
.br
.RI "This function activates the Automatic Homing procedure "
.ti -1c
.RI "static void \fBsetManualEnable\fP (bool status)"
.br
.RI "Enables / Disables the manual activation mode\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBVerticalMotor\fP ^ \fBdevice\fP = gcnew \fBVerticalMotor\fP()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "bool \fBinitializeSpecificObjectDictionaryCallback\fP (void) override"
.br
.RI "Sets specific registers for the Arm activation\&. "
.ti -1c
.RI "void \fBautomaticPositioningCompletedCallback\fP (\fBMotorCompletedCodes\fP error) override"
.br
.RI "Override the basic class to handle the Virtual isocentric function 
.br
 "
.ti -1c
.RI "void \fBautomaticHomingCompletedCallback\fP (\fBMotorCompletedCodes\fP error) override"
.br
.RI "The \fBVerticalMotor\fP class override this function in order to handle the homing completion process\&. "
.ti -1c
.RI "\fBMotorCompletedCodes\fP \fBidleCallback\fP (void) override"
.br
.RI "The \fBVerticalMotor\fP class override this function in order to handle the IDLE activities "
.ti -1c
.RI "\fBMotorCompletedCodes\fP \fBmanualPositioningRunningCallback\fP (void) override"
.br
.RI "The \fBVerticalMotor\fP class override this function in order to handle the manual activation process\&. "
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static bool \fBiso_activation_mode\fP = false"
.br
.ti -1c
.RI "static bool \fBmanual_activation_enabled\fP = false"
.br
.RI "This is the flag activating the vertical manual activation\&. "
.ti -1c
.RI "static bool \fBmanual_up_direction\fP = false"
.br
.RI "Sets true if the Upward manual command is executing, false if the downward manual activation is executing\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This is the Vertical Module class implementation
.SH "Constructor & Destructor Documentation"
.PP 
.SS "VerticalMotor::VerticalMotor (void)"

.SH "Member Function Documentation"
.PP 
.SS "bool VerticalMotor::activateIsocentricCorrection (int id, int delta_target)\fC [static]\fP"

.PP
This command activates the isocentric correction\&. 
.SS "void VerticalMotor::automaticHomingCompletedCallback (\fBMotorCompletedCodes\fP error)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
The \fBVerticalMotor\fP class override this function in order to handle the homing completion process\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "void VerticalMotor::automaticPositioningCompletedCallback (\fBMotorCompletedCodes\fP error)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Override the basic class to handle the Virtual isocentric function 
.br
 The \fBVerticalMotor\fP class override this function in order to handle the Isocentric automatic activation code
.PP
\fBParameters\fP
.RS 4
\fILABEL_ERROR\fP 
.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "\fBCanOpenMotor::MotorCompletedCodes\fP VerticalMotor::idleCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
The \fBVerticalMotor\fP class override this function in order to handle the IDLE activities 
.SH "Safety Management"
.PP
.SH "Manual Activation Feature"
.PP
The function polls the status of the hardware inputs of the \fBPCB301\fP board in order to detect a request for a manual activation\&.
.PP
If the request should change state from No Activation to Up or Down activation code, the manual activation procedure is started\&.
.PP
This procedure shall be enabled in order to be executed\&. (see \fBsetManualEnable()\fP )
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "bool VerticalMotor::initializeSpecificObjectDictionaryCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Sets specific registers for the Arm activation\&. 
.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "\fBVerticalMotor::MotorCompletedCodes\fP VerticalMotor::manualPositioningRunningCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
The \fBVerticalMotor\fP class override this function in order to handle the manual activation process\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "static void VerticalMotor::setManualEnable (bool status)\fC [inline]\fP, \fC [static]\fP"

.PP
Enables / Disables the manual activation mode\&. 
.SS "bool VerticalMotor::startHoming (void)\fC [static]\fP"

.PP
This function activates the Automatic Homing procedure 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBVerticalMotor\fP ^ VerticalMotor::device = gcnew \fBVerticalMotor\fP()\fC [static]\fP"

.SS "bool VerticalMotor::iso_activation_mode = false\fC [static]\fP, \fC [private]\fP"

.SS "bool VerticalMotor::manual_activation_enabled = false\fC [static]\fP, \fC [private]\fP"

.PP
This is the flag activating the vertical manual activation\&. 
.SS "bool VerticalMotor::manual_up_direction = false\fC [static]\fP, \fC [private]\fP"

.PP
Sets true if the Upward manual command is executing, false if the downward manual activation is executing\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU_MASTER Software Description from the source code\&.
