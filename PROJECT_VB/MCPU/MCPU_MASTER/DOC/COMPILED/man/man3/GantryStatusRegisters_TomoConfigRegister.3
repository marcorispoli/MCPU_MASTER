.TH "GantryStatusRegisters::TomoConfigRegister" 3 "Thu Nov 16 2023" "MCPU_MASTER Software Description" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GantryStatusRegisters::TomoConfigRegister \- This class implements the Tomo configuration selection options\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gantry_global_status\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum class \fBoptions_conf\fP { \fBTOMO_1F\fP = 0, \fBTOMO_2F\fP, \fBTOMO_3F\fP, \fBTOMO_4F\fP, \fBTOMO_5F\fP, \fBLEN\fP, \fBUNDEF\fP = LEN }"
.br
.RI "This is the enumeration option code for file configuration  "
.ti -1c
.RI "enum class \fBoptions_seq\fP { \fBNARROW\fP = 0, \fBINTERMEDIATE\fP, \fBWIDE\fP, \fBSUPERWIDE\fP, \fBLEN\fP, \fBUNDEF\fP = LEN }"
.br
.RI "This is the enumeration option code for the particolar sequence in the configuration file 
.br
  "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBselect\fP (String^ conftag, String^ seqtag)"
.br
.RI "This function selects a Tomo configuration sequence based on the confid and seqid identifiers\&. "
.ti -1c
.RI "static String ^ \fBgetConfig\fP (void)"
.br
.RI "This function returns the Tomo Configuration file name  "
.ti -1c
.RI "static String ^ \fBgetSequence\fP (void)"
.br
.RI "This function returns the Tomo Sequence name  "
.ti -1c
.RI "static bool \fBisValid\fP (void)"
.br
.RI "This function returns true if the Tomo configuration has been selected  "
.ti -1c
.RI "static int \fBgetTomoHome\fP (void)"
.br
.RI "This function returns the Home position of a selected configuration "
.ti -1c
.RI "static int \fBgetTomoEnd\fP (void)"
.br
.ti -1c
.RI "static int \fBgetTomoAcc\fP (void)"
.br
.ti -1c
.RI "static int \fBgetTomoDec\fP (void)"
.br
.ti -1c
.RI "static int \fBgetTomoRun\fP (void)"
.br
.ti -1c
.RI "static int \fBgetTomoSmp\fP (void)"
.br
.RI "This function returns the number of valid sample of a selected Tomo configuration "
.ti -1c
.RI "static int \fBgetTomoSkp\fP (void)"
.br
.RI "This function returns the number of initial skips of a selected Tomo configuration "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const cli::array< String^> ^ \fBtags_conf\fP = gcnew cli::array<String^> { 'TOMO_1F', 'TOMO_2F', 'TOMO_3F', 'TOMO_4F', 'TOMO_5F', 'UNDEF' }"
.br
.RI "This is the config id option-tags static array\&. "
.ti -1c
.RI "static const cli::array< String^> ^ \fBtags_seq\fP = gcnew cli::array<String^> { 'N', 'I', 'W', 'SW', 'UNDEF' }"
.br
.RI "This is the sequence option-tags static array\&. "
.in -1c
.SS "Events"

.in +1c
.ti -1c
.RI "static \fBdelegate_void_callback\fP^ \fBselection_change_event\fP"
.br
.RI "This event is generated whenver the status of the register is changed\&. "
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static \fBoptions_conf\fP \fBconfid\fP = \fBoptions_conf::UNDEF\fP"
.br
.RI "This is the register conf_id\&. "
.ti -1c
.RI "static \fBoptions_seq\fP \fBseqid\fP = \fBoptions_seq::UNDEF\fP"
.br
.RI "This is the register sequence_id\&. "
.ti -1c
.RI "static int \fBtomo_home\fP"
.br
.RI "This is the Home position in 0\&.01° "
.ti -1c
.RI "static int \fBtomo_end\fP"
.br
.RI "This is the Tomo End position in 0\&.01° "
.ti -1c
.RI "static int \fBtomo_acc\fP"
.br
.RI "This is the acceleration in 0\&.01°/ss\&. "
.ti -1c
.RI "static int \fBtomo_dec\fP"
.br
.RI "This is the deceleration in 0\&.01°/ss\&. "
.ti -1c
.RI "static int \fBtomo_run\fP"
.br
.RI "This is the speed in 0\&.01°/s\&. "
.ti -1c
.RI "static int \fBtomo_smp\fP"
.br
.RI "This is the number of valid samples\&. "
.ti -1c
.RI "static int \fBtomo_skp\fP"
.br
.RI "This is the number of initial skip pulses\&. "
.in -1c
.SH "Detailed Description"
.PP 
This class implements the Tomo configuration selection options\&. 

The Tomomo configuration file is stored in the Disk\&.
.PP
There are several predefined configuration files and in each of the configuration files there are a set of predefined sequence description with its unit descriptor identifier\&.
.PP
The configuration file identifier is named confid; The sequnce descriptor is named seqid; The selection is achieved with the confid + seqid codes\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum class \fBGantryStatusRegisters::TomoConfigRegister::options_conf\fP\fC [strong]\fP"

.PP
This is the enumeration option code for file configuration  
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITOMO_1F \fP\fP
Tomo configuration file 1F\&. 
.TP
\fB\fITOMO_2F \fP\fP
Tomo configuration file 2F\&. 
.TP
\fB\fITOMO_3F \fP\fP
Tomo configuration file 3F\&. 
.TP
\fB\fITOMO_4F \fP\fP
Tomo configuration file 4F\&. 
.TP
\fB\fITOMO_5F \fP\fP
Tomo configuration file 5F\&. 
.TP
\fB\fILEN \fP\fP
.TP
\fB\fIUNDEF \fP\fP
.SS "enum class \fBGantryStatusRegisters::TomoConfigRegister::options_seq\fP\fC [strong]\fP"

.PP
This is the enumeration option code for the particolar sequence in the configuration file 
.br
  
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINARROW \fP\fP
Narrow sequence\&. 
.TP
\fB\fIINTERMEDIATE \fP\fP
Intermediate sequence\&. 
.TP
\fB\fIWIDE \fP\fP
Wide seqeunce\&. 
.TP
\fB\fISUPERWIDE \fP\fP
Super-wide sequence\&. 
.TP
\fB\fILEN \fP\fP
.TP
\fB\fIUNDEF \fP\fP
.SH "Member Function Documentation"
.PP 
.SS "static String ^ GantryStatusRegisters::TomoConfigRegister::getConfig (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns the Tomo Configuration file name  
.PP
\fBReturns\fP
.RS 4
Tomo Configuration file name
.RE
.PP

.SS "static String ^ GantryStatusRegisters::TomoConfigRegister::getSequence (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns the Tomo Sequence name  
.PP
\fBReturns\fP
.RS 4
Tomo Sequence name
.RE
.PP

.SS "static int GantryStatusRegisters::TomoConfigRegister::getTomoAcc (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns the Acceleration of a selected Tomo configuration
.PP
\fBReturns\fP
.RS 4
Acceleration in 0\&.01°/ss 
.RE
.PP

.SS "static int GantryStatusRegisters::TomoConfigRegister::getTomoDec (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns the Deceleration of a selected Tomo configuration
.PP
\fBReturns\fP
.RS 4
Deceleration in 0\&.01°/ss 
.RE
.PP

.SS "static int GantryStatusRegisters::TomoConfigRegister::getTomoEnd (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns the End position of a selected configuration
.PP
\fBReturns\fP
.RS 4
Tomo End position in 0\&.01°
.RE
.PP

.SS "static int GantryStatusRegisters::TomoConfigRegister::getTomoHome (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns the Home position of a selected configuration 
.PP
\fBReturns\fP
.RS 4
Tomo home position in 0\&.01°
.RE
.PP

.SS "static int GantryStatusRegisters::TomoConfigRegister::getTomoRun (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns the Speed of a selected Tomo configuration
.PP
\fBReturns\fP
.RS 4
Speed in 0\&.01°/s 
.RE
.PP

.SS "static int GantryStatusRegisters::TomoConfigRegister::getTomoSkp (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns the number of initial skips of a selected Tomo configuration 
.PP
\fBReturns\fP
.RS 4
Number of initial skips 
.RE
.PP

.SS "static int GantryStatusRegisters::TomoConfigRegister::getTomoSmp (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns the number of valid sample of a selected Tomo configuration 
.PP
\fBReturns\fP
.RS 4
Number of sequence samples 
.RE
.PP

.SS "static bool GantryStatusRegisters::TomoConfigRegister::isValid (void)\fC [inline]\fP, \fC [static]\fP"

.PP
This function returns true if the Tomo configuration has been selected  
.PP
\fBReturns\fP
.RS 4
true if a valid configuration is selected
.RE
.PP

.SS "static bool GantryStatusRegisters::TomoConfigRegister::select (String^ conftag, String^ seqtag)\fC [inline]\fP, \fC [static]\fP"

.PP
This function selects a Tomo configuration sequence based on the confid and seqid identifiers\&. If the selection changes, the \fBselection_change_event()\fP is generated\&.
.PP
\fBParameters\fP
.RS 4
\fIconftag\fP this is the configuration file identifier tag
.br
\fIseqtag\fP this is the sequence identifier tag
.RE
.PP
\fBReturns\fP
.RS 4
tue if the confid + seqid exists
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBoptions_conf\fP GantryStatusRegisters::TomoConfigRegister::confid = \fBoptions_conf::UNDEF\fP\fC [static]\fP, \fC [private]\fP"

.PP
This is the register conf_id\&. 
.SS "\fBoptions_seq\fP GantryStatusRegisters::TomoConfigRegister::seqid = \fBoptions_seq::UNDEF\fP\fC [static]\fP, \fC [private]\fP"

.PP
This is the register sequence_id\&. 
.SS "const cli::array<String^> ^ GantryStatusRegisters::TomoConfigRegister::tags_conf = gcnew cli::array<String^> { 'TOMO_1F', 'TOMO_2F', 'TOMO_3F', 'TOMO_4F', 'TOMO_5F', 'UNDEF' }\fC [static]\fP"

.PP
This is the config id option-tags static array\&. 
.SS "const cli::array<String^> ^ GantryStatusRegisters::TomoConfigRegister::tags_seq = gcnew cli::array<String^> { 'N', 'I', 'W', 'SW', 'UNDEF' }\fC [static]\fP"

.PP
This is the sequence option-tags static array\&. 
.SS "int GantryStatusRegisters::TomoConfigRegister::tomo_acc\fC [static]\fP, \fC [private]\fP"

.PP
This is the acceleration in 0\&.01°/ss\&. 
.SS "int GantryStatusRegisters::TomoConfigRegister::tomo_dec\fC [static]\fP, \fC [private]\fP"

.PP
This is the deceleration in 0\&.01°/ss\&. 
.SS "int GantryStatusRegisters::TomoConfigRegister::tomo_end\fC [static]\fP, \fC [private]\fP"

.PP
This is the Tomo End position in 0\&.01° 
.SS "int GantryStatusRegisters::TomoConfigRegister::tomo_home\fC [static]\fP, \fC [private]\fP"

.PP
This is the Home position in 0\&.01° 
.SS "int GantryStatusRegisters::TomoConfigRegister::tomo_run\fC [static]\fP, \fC [private]\fP"

.PP
This is the speed in 0\&.01°/s\&. 
.SS "int GantryStatusRegisters::TomoConfigRegister::tomo_skp\fC [static]\fP, \fC [private]\fP"

.PP
This is the number of initial skip pulses\&. 
.SS "int GantryStatusRegisters::TomoConfigRegister::tomo_smp\fC [static]\fP, \fC [private]\fP"

.PP
This is the number of valid samples\&. 
.SH "Event Documentation"
.PP 
.SS "\fBdelegate_void_callback\fP^ GantryStatusRegisters::TomoConfigRegister::selection_change_event\fC [static]\fP"

.PP
This event is generated whenver the status of the register is changed\&. Usage: \fBTomoConfigRegister::selection_change_event\fP += gcnew delegate_void_callback(&some_class, some_class::func)  

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU_MASTER Software Description from the source code\&.
