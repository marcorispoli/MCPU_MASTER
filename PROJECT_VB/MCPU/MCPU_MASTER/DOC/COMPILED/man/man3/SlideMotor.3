.TH "SlideMotor" 3 "Fri Dec 15 2023" "MCPU_MASTER Software Description" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SlideMotor
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SlideMotor\&.h>\fP
.PP
Inherits \fBCANOPEN::CanOpenMotor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSlideMotor\fP (void)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBstartHoming\fP (void)"
.br
.RI "This function activates the Automatic Homing procedure "
.ti -1c
.RI "static void \fBsetManualEnable\fP (bool status)"
.br
.RI "Enables / Disables the manual activation mode\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBSlideMotor\fP ^ \fBdevice\fP = gcnew \fBSlideMotor\fP()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "bool \fBinitializeSpecificObjectDictionaryCallback\fP (void) override"
.br
.RI "Sets specific registers for the Arm activation 
.br
 "
.ti -1c
.RI "\fBMotorCompletedCodes\fP \fBidleCallback\fP (void) override"
.br
.RI "The \fBSlideMotor\fP class override this function in order to handle the IDLE activities "
.ti -1c
.RI "void \fBautomaticPositioningCompletedCallback\fP (\fBMotorCompletedCodes\fP error) override"
.br
.RI "Override the basic class to handle the Virtual isocentric function 
.br
 "
.ti -1c
.RI "void \fBautomaticHomingCompletedCallback\fP (\fBMotorCompletedCodes\fP error) override"
.br
.RI "The \fBSlideMotor\fP class override this function in order to handle the homing completion process\&. "
.ti -1c
.RI "void \fBmanualPositioningCompletedCallback\fP (\fBMotorCompletedCodes\fP error) override"
.br
.RI "This function is called when the command is terminated\&. "
.ti -1c
.RI "\fBMotorCompletedCodes\fP \fBmanualPositioningRunningCallback\fP (void) override"
.br
.RI "The \fBArmMotor\fP class override this function in order to handle the manual activation process\&. "
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static bool \fBmanual_activation_enabled\fP = false"
.br
.RI "This is the flag activating the body manual activation\&. "
.ti -1c
.RI "static bool \fBmanual_up_direction\fP = false"
.br
.RI "Sets true if the UP manual command is executing, false if the DOWN manual activation is executing\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SlideMotor::SlideMotor (void)"

.SH "Member Function Documentation"
.PP 
.SS "void SlideMotor::automaticHomingCompletedCallback (\fBMotorCompletedCodes\fP error)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
The \fBSlideMotor\fP class override this function in order to handle the homing completion process\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "void SlideMotor::automaticPositioningCompletedCallback (\fBMotorCompletedCodes\fP error)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Override the basic class to handle the Virtual isocentric function 
.br
 The \fBSlideMotor\fP class override this function in order to handle the Isocentric automatic activation code
.PP
\fBParameters\fP
.RS 4
\fILABEL_ERROR\fP 
.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "\fBSlideMotor::MotorCompletedCodes\fP SlideMotor::idleCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
The \fBSlideMotor\fP class override this function in order to handle the IDLE activities 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "bool SlideMotor::initializeSpecificObjectDictionaryCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Sets specific registers for the Arm activation 
.br
 The \fBSlideMotor\fP override this function in order to initialize specific motor registers
.PP
\fBReturns\fP
.RS 4
true if the initialization termines successfully
.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "void SlideMotor::manualPositioningCompletedCallback (\fBMotorCompletedCodes\fP error)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
This function is called when the command is terminated\&. 
.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "\fBSlideMotor::MotorCompletedCodes\fP SlideMotor::manualPositioningRunningCallback (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
The \fBArmMotor\fP class override this function in order to handle the manual activation process\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.PP
Reimplemented from \fBCANOPEN::CanOpenMotor\fP\&.
.SS "static void SlideMotor::setManualEnable (bool status)\fC [inline]\fP, \fC [static]\fP"

.PP
Enables / Disables the manual activation mode\&. 
.SS "bool SlideMotor::startHoming (void)\fC [static]\fP"

.PP
This function activates the Automatic Homing procedure 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBSlideMotor\fP ^ SlideMotor::device = gcnew \fBSlideMotor\fP()\fC [static]\fP"

.SS "bool SlideMotor::manual_activation_enabled = false\fC [static]\fP, \fC [private]\fP"

.PP
This is the flag activating the body manual activation\&. 
.SS "bool SlideMotor::manual_up_direction = false\fC [static]\fP, \fC [private]\fP"

.PP
Sets true if the UP manual command is executing, false if the DOWN manual activation is executing\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU_MASTER Software Description from the source code\&.
