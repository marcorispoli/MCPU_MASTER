.TH "GantryStatusRegisters::FilterOptions" 3MCPU_MASTER Software Description" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GantryStatusRegisters::FilterOptions \- This class implements the Filter selection interface\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gantry_global_status\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum class \fBoptions\fP { \fBFILTER_Ag\fP, \fBFILTER_Al\fP, \fBFILTER_Mo\fP, \fBFILTER_Rh\fP, \fBFILTER_Cu\fP, \fBLEN\fP, \fBUNDEF\fP = LEN }"
.br
.RI "This is the enumeration option code\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBoptions\fP \fBgetCode\fP (void)"
.br
.RI "Returns the option code of the register\&. "
.ti -1c
.RI "String ^ \fBgetTag\fP (void)"
.br
.RI "Returns the option tag of the register\&. "
.ti -1c
.RI "bool \fBsetCode\fP (\fBoptions\fP val)"
.br
.RI "This function set the register with the option code (and related tag)\&. "
.ti -1c
.RI "bool \fBsetCode\fP (String^ val)"
.br
.ti -1c
.RI "\fBFilterOptions\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const array< String^> ^ \fBtags\fP = gcnew array<String^> { 'FILTER_Ag', 'FILTER_Al', 'FILTER_Mo', 'FILTER_Rh', 'FILTER_Cu', 'UNDEF'}"
.br
.RI "This is the tags array\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBoptions\fP \fBcode\fP"
.br
.RI "This is the register option-code\&. "
.ti -1c
.RI "String ^ \fBtag\fP"
.br
.RI "This is the register tag\&. "
.in -1c
.SH "Detailed Description"
.PP 
This class implements the Filter selection interface\&. 

The class is declared by registers that need to store a filter status info\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum class \fBGantryStatusRegisters::FilterOptions::options\fP\fC [strong]\fP"

.PP
This is the enumeration option code\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFILTER_Ag \fP\fP
Ag filter seletion option\&. 
.TP
\fB\fIFILTER_Al \fP\fP
Al filter seletion option\&. 
.TP
\fB\fIFILTER_Mo \fP\fP
Mo filter seletion option\&. 
.TP
\fB\fIFILTER_Rh \fP\fP
Rh filter seletion option\&. 
.TP
\fB\fIFILTER_Cu \fP\fP
Cu filter seletion option\&. 
.TP
\fB\fILEN \fP\fP
.TP
\fB\fIUNDEF \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "GantryStatusRegisters::FilterOptions::FilterOptions ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBoptions\fP GantryStatusRegisters::FilterOptions::getCode (void)\fC [inline]\fP"

.PP
Returns the option code of the register\&. 
.PP
\fBReturns\fP
.RS 4
the value of the option code 
.RE
.PP

.SS "String ^ GantryStatusRegisters::FilterOptions::getTag (void)\fC [inline]\fP"

.PP
Returns the option tag of the register\&. 
.PP
\fBReturns\fP
.RS 4
the value of the Tag 
.RE
.PP

.SS "bool GantryStatusRegisters::FilterOptions::setCode (\fBoptions\fP val)\fC [inline]\fP"

.PP
This function set the register with the option code (and related tag)\&. The register is updated with the option code and related tag and, in case of value change, the status_change_event() is generated\&.
.PP
\fBParameters\fP
.RS 4
\fIval\fP this is the option-code to be set
.RE
.PP
\fBReturns\fP
.RS 4
true if success or false if the code doesn't exist
.RE
.PP

.SS "bool GantryStatusRegisters::FilterOptions::setCode (String^ val)\fC [inline]\fP"
This function set the register with the option tag (and related code)\&.
.PP
The register is updated with the tag and the related option code and, in case of value change, the status_change_event() is generated\&.
.PP
\fBParameters\fP
.RS 4
\fIval\fP this is the tag to be set
.RE
.PP
\fBReturns\fP
.RS 4
true if success or false if the code doesn't exist
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBoptions\fP GantryStatusRegisters::FilterOptions::code\fC [private]\fP"

.PP
This is the register option-code\&. 
.SS "String ^ GantryStatusRegisters::FilterOptions::tag\fC [private]\fP"

.PP
This is the register tag\&. 
.SS "const array<String^> ^ GantryStatusRegisters::FilterOptions::tags = gcnew array<String^> { 'FILTER_Ag', 'FILTER_Al', 'FILTER_Mo', 'FILTER_Rh', 'FILTER_Cu', 'UNDEF'}\fC [static]\fP"

.PP
This is the tags array\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU_MASTER Software Description from the source code\&.
