.TH "PCB303" 3 "Mon Sep 30 2024" "MCPU" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PCB303 \- This class implements the functions of the \fBPCB303\fP Module  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <PCB303\&.h>\fP
.PP
Inherits \fBCanDeviceProtocol\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBformatBlades\fP"
.br
.RI "This class provides a contenitor for a CALIBRATION blade setup"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPCB303\fP ()"
.br
.RI "\fBPCB303\fP Class constructor\&. "
.in -1c
.SS "Static Public Member Functions"

.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "static void \fBsetAutoCollimationMode\fP (void)"
.br
.RI "This function sets the format collimation to AUTO mode\&. "
.ti -1c
.RI "static void \fBsetOpenCollimationMode\fP (void)"
.br
.RI "This function sets the format collimation to OPEN mode\&. "
.ti -1c
.RI "static void \fBsetCalibrationCollimationMode\fP (\fBformatBlades\fP^ blades)"
.br
.RI "This function sets the format collimation to CALIBRATION mode\&. "
.ti -1c
.RI "static void \fBsetTomoCollimationMode\fP (void)"
.br
.RI "This function activates the Tomo collimation mode\&. "
.ti -1c
.RI "static void \fBsetCustomCollimationMode\fP (\fBColliStandardSelections\fP custom)"
.br
.RI "This function sets the format collimation to CUSTOM mode\&. "
.ti -1c
.RI "static void \fBresetFaults\fP (void)"
.br
.RI "In case of collimation fault condition, this function starts a new collimation attempt\&. "
.ti -1c
.RI "static bool \fBisValidCollimationFormat\fP (void)"
.br
.in -1c
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBPCB303\fP ^ \fBdevice\fP = gcnew \fBPCB303\fP()"
.br
.in -1c
.in +1c
.ti -1c
.RI "enum class \fBColliStandardSelections\fP { \fBCOLLI_NOT_STANDARD\fP = 0, \fBCOLLI_INVALID_FORMAT\fP = COLLI_NOT_STANDARD, \fBCOLLI_STANDARD1\fP, \fBCOLLI_STANDARD_24x30\fP = COLLI_STANDARD1, \fBCOLLI_STANDARD2\fP, \fBCOLLI_STANDARD3\fP, \fBCOLLI_STANDARD4\fP, \fBCOLLI_STANDARD5\fP, \fBCOLLI_STANDARD6\fP, \fBCOLLI_STANDARD7\fP, \fBCOLLI_STANDARD8\fP, \fBCOLLI_STANDARD9\fP, \fBCOLLI_STANDARD10\fP, \fBCOLLI_STANDARD11\fP, \fBCOLLI_STANDARD12\fP, \fBCOLLI_STANDARD13\fP, \fBCOLLI_STANDARD14\fP, \fBCOLLI_STANDARD15\fP, \fBCOLLI_STANDARD16\fP, \fBCOLLI_STANDARD17\fP, \fBCOLLI_STANDARD18\fP, \fBCOLLI_STANDARD19\fP, \fBCOLLI_STANDARD20\fP, \fBCOLLI_STANDARD_LEN\fP }"
.br
.RI "This is the SYSTEM_FORMAT_INDEX byte definition of the SYSTEM status register\&. This byte reports the current select collimation format\&. "
.ti -1c
.RI "enum class \fBDataRegisters\fP { \fBDATA_CALIBRATION_FB\fP = 0, \fBDATA_CALIBRATION_LR\fP, \fBDATA_CALIBRATION_T\fP }"
.br
.RI "This is the enumeration class definigs the indexes of the protocol DATA registers 
.br
 "
.ti -1c
.RI "enum class \fBParamRegisters\fP { \fBPARAM_STANDARD_FORMAT_FT\fP = 0, \fBPARAM_STANDARD_FORMAT_LR1\fP, \fBPARAM_STANDARD_FORMAT_B1\fP, \fBPARAM_STANDARD_FORMAT_LR2\fP, \fBPARAM_STANDARD_FORMAT_B2\fP, \fBPARAM_STANDARD_FORMAT_LR3\fP, \fBPARAM_STANDARD_FORMAT_B3\fP, \fBPARAM_STANDARD_FORMAT_LR4\fP, \fBPARAM_STANDARD_FORMAT_B4\fP, \fBPARAM_STANDARD_FORMAT_LR5\fP, \fBPARAM_STANDARD_FORMAT_B5\fP, \fBPARAM_STANDARD_FORMAT_LR6\fP, \fBPARAM_STANDARD_FORMAT_B6\fP, \fBPARAM_STANDARD_FORMAT_LR7\fP, \fBPARAM_STANDARD_FORMAT_B7\fP, \fBPARAM_STANDARD_FORMAT_LR8\fP, \fBPARAM_STANDARD_FORMAT_B8\fP, \fBPARAM_STANDARD_FORMAT_LR9\fP, \fBPARAM_STANDARD_FORMAT_B9\fP, \fBPARAM_STANDARD_FORMAT_LR10\fP, \fBPARAM_STANDARD_FORMAT_B10\fP, \fBPARAM_STANDARD_FORMAT_LR11\fP, \fBPARAM_STANDARD_FORMAT_B11\fP, \fBPARAM_STANDARD_FORMAT_LR12\fP, \fBPARAM_STANDARD_FORMAT_B12\fP, \fBPARAM_STANDARD_FORMAT_LR13\fP, \fBPARAM_STANDARD_FORMAT_B13\fP, \fBPARAM_STANDARD_FORMAT_LR14\fP, \fBPARAM_STANDARD_FORMAT_B14\fP, \fBPARAM_STANDARD_FORMAT_LR15\fP, \fBPARAM_STANDARD_FORMAT_B15\fP, \fBPARAM_STANDARD_FORMAT_LR16\fP, \fBPARAM_STANDARD_FORMAT_B16\fP, \fBPARAM_STANDARD_FORMAT_LR17\fP, \fBPARAM_STANDARD_FORMAT_B17\fP, \fBPARAM_STANDARD_FORMAT_LR18\fP, \fBPARAM_STANDARD_FORMAT_B18\fP, \fBPARAM_STANDARD_FORMAT_LR19\fP, \fBPARAM_STANDARD_FORMAT_B19\fP, \fBPARAM_STANDARD_FORMAT_LR20\fP, \fBPARAM_STANDARD_FORMAT_B20\fP }"
.br
.RI "
.br
 This enumeration class defines the Indexes of the Parameters Registers "
.ti -1c
.RI "static \fBColliStandardSelections\fP \fBgetColliFormatIndexFromParam\fP (System::String^ param)"
.br
.in -1c
.in +1c
.ti -1c
.RI "void \fBresetLoop\fP (void) override"
.br
.RI "This is the Base class resetLoop override function\&. "
.ti -1c
.RI "void \fBrunningLoop\fP (void) override"
.br
.RI "This is the Base Class override function to handle the normal operation workflow\&. "
.ti -1c
.RI "bool \fBconfigurationLoop\fP (void) override"
.br
.RI "This is the Base Class override function to handle the device configuration\&. "
.ti -1c
.RI "void \fBdemoLoop\fP (void) override"
.br
.RI "This routine shall be overridden by the subclass module in order to implement the simulated features\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This class implements the functions of the \fBPCB303\fP Module 


.SH "Member Enumeration Documentation"
.PP 
.SS "enum class \fBPCB303::ColliStandardSelections\fP\fC [strong]\fP"

.PP
This is the SYSTEM_FORMAT_INDEX byte definition of the SYSTEM status register\&. This byte reports the current select collimation format\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICOLLI_NOT_STANDARD \fP\fP
When an OPEN format or CALIBRATION format is selected this is reported as a non standard format active\&. 
.TP
\fB\fICOLLI_INVALID_FORMAT \fP\fP
This is the code assigned to a Not valid collimatoion format code\&. 
.TP
\fB\fICOLLI_STANDARD1 \fP\fP
The current selected format is the STANDARD1\&. 
.TP
\fB\fICOLLI_STANDARD_24x30 \fP\fP
The special code is reserved to the 24x30 collimation, assigned to the COLLI_STANDARD1\&. 
.TP
\fB\fICOLLI_STANDARD2 \fP\fP
The current selected format is the STANDARD2\&. 
.TP
\fB\fICOLLI_STANDARD3 \fP\fP
The current selected format is the STANDARD3\&. 
.TP
\fB\fICOLLI_STANDARD4 \fP\fP
The current selected format is the STANDARD4\&. 
.TP
\fB\fICOLLI_STANDARD5 \fP\fP
The current selected format is the STANDARD5\&. 
.TP
\fB\fICOLLI_STANDARD6 \fP\fP
The current selected format is the STANDARD6\&. 
.TP
\fB\fICOLLI_STANDARD7 \fP\fP
The current selected format is the STANDARD7\&. 
.TP
\fB\fICOLLI_STANDARD8 \fP\fP
The current selected format is the STANDARD8\&. 
.TP
\fB\fICOLLI_STANDARD9 \fP\fP
The current selected format is the STANDARD9\&. 
.TP
\fB\fICOLLI_STANDARD10 \fP\fP
The current selected format is the STANDARD10\&. 
.TP
\fB\fICOLLI_STANDARD11 \fP\fP
The current selected format is the STANDARD11\&. 
.TP
\fB\fICOLLI_STANDARD12 \fP\fP
The current selected format is the STANDARD12\&. 
.TP
\fB\fICOLLI_STANDARD13 \fP\fP
The current selected format is the STANDARD13\&. 
.TP
\fB\fICOLLI_STANDARD14 \fP\fP
The current selected format is the STANDARD14\&. 
.TP
\fB\fICOLLI_STANDARD15 \fP\fP
The current selected format is the STANDARD15\&. 
.TP
\fB\fICOLLI_STANDARD16 \fP\fP
The current selected format is the STANDARD16\&. 
.TP
\fB\fICOLLI_STANDARD17 \fP\fP
The current selected format is the STANDARD17\&. 
.TP
\fB\fICOLLI_STANDARD18 \fP\fP
The current selected format is the STANDARD18\&. 
.TP
\fB\fICOLLI_STANDARD19 \fP\fP
The current selected format is the STANDARD19\&. 
.TP
\fB\fICOLLI_STANDARD20 \fP\fP
The current selected format is the STANDARD20\&. 
.SS "enum class \fBPCB303::DataRegisters\fP\fC [strong]\fP"

.PP
This is the enumeration class definigs the indexes of the protocol DATA registers 
.br
 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIDATA_CALIBRATION_FB \fP\fP
The Application shall set this register in CALIBRATION to set the Front and Back blades positions\&. 
.TP
\fB\fIDATA_CALIBRATION_LR \fP\fP
The Application shall set this register in CALIBRATION to set the Left and Right blades positions\&. 
.TP
\fB\fIDATA_CALIBRATION_T \fP\fP
The Application shall set this register in CALIBRATION to set the Trap blade positions\&. 
.SS "enum class \fBPCB303::ParamRegisters\fP\fC [strong]\fP"

.PP

.br
 This enumeration class defines the Indexes of the Parameters Registers 
.br
 

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU from the source code\&.
