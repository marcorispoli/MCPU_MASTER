.TH "Exposures" 3 "Mon Sep 30 2024" "MCPU" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Exposures \- This Class implements the Exposure data structures and the exposure worflows\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ExposureModule\&.h>\fP
.PP
Inherits \fBGenerator\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBexposure_pulse\fP"
.br
.ti -1c
.RI "class \fBtomo_data\fP"
.br
.RI "Self module generation\&. "
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum class \fBexposure_type_options\fP { \fBMAN_2D\fP =0, \fBAEC_2D\fP, \fBMAN_3D\fP, \fBAEC_3D\fP, \fBMAN_COMBO\fP, \fBAEC_COMBO\fP, \fBMAN_AE\fP, \fBAEC_AE\fP, \fBTEST_2D\fP, \fBEXP_NOT_DEFINED\fP }"
.br
.RI "This is the enumeration class defining all the possible exposures "
.ti -1c
.RI "enum class \fBcompression_mode_option\fP { \fBCMP_KEEP\fP = 0, \fBCMP_RELEASE\fP, \fBCMP_DISABLE\fP }"
.br
.RI "This is the enumeration of the possible Compression modes\&. "
.ti -1c
.RI "enum class \fBarm_mode_option\fP { \fBARM_ENA\fP = 0, \fBARM_DIS\fP }"
.br
.RI "This is the enumeration of the possible ARM usage during exposure "
.ti -1c
.RI "enum class \fBpatient_protection_option\fP { \fBPROTECTION_ENA\fP = 0, \fBPROTECTION_DIS\fP }"
.br
.RI "This is the enumeration of the possible Patient Protection usage during exposure "
.ti -1c
.RI "enum class \fBexposure_completed_options\fP { \fBXRAY_SUCCESS\fP = 0, \fBXRAY_PARTIAL_DOSE\fP = 1, \fBXRAY_NO_DOSE\fP = 2 }"
.br
.RI "This Enumeration class describes the possible results of an exposure\&. "
.ti -1c
.RI "enum class \fBexposure_completed_errors\fP { \fBXRAY_NO_ERRORS\fP = (int) Generator::generator_errors::GEN_NO_ERRORS, \fBXRAY_BUTTON_RELEASE\fP = (int)Generator::generator_errors::GEN_BUTTON_RELEASE, \fBXRAY_TIMEOUT\fP = (int) Generator::generator_errors::GEN_TIMEOUT, \fBXRAY_COMMUNICATION_ERROR\fP = (int)Generator::generator_errors::GEN_COMMUNICATION_ERROR, \fBXRAY_INVALID_GENERATOR_STATUS\fP = (int) Generator::generator_errors::GEN_INVALID_STATUS, \fBXRAY_ERR_CODE\fP = (int)Generator::generator_errors::GEN_LAST_ERRCODE, \fBXRAY_INVALID_2D_PARAMETERS\fP, \fBXRAY_INVALID_TOMO_PARAMETERS\fP, \fBXRAY_TIMEOUT_TILT_IN_HOME\fP, \fBXRAY_ERROR_TILT_IN_HOME\fP, \fBXRAY_GRID_ERROR\fP, \fBXRAY_COLLI_FORMAT_ERROR\fP, \fBXRAY_TIMEOUT_AEC\fP, \fBXRAY_POSITIONING_ERROR\fP, \fBXRAY_FILTER_ERROR\fP, \fBXRAY_TUBE_TEMPERATURE\fP, \fBXRAY_INVALID_PROCEDURE\fP }"
.br
.RI "This class enumerates all the possible x-ray error reasons "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBstartSimulator\fP (void)"
.br
.ti -1c
.RI "static void \fBstartGenerator\fP (void)"
.br
.ti -1c
.RI "static void \fBsetExposureMode\fP (\fBexposure_type_options\fP mode)"
.br
.ti -1c
.RI "static \fBexposure_type_options\fP \fBgetExposureMode\fP (void)"
.br
.ti -1c
.RI "static void \fBsetDetectorType\fP (\fBDetectorConfig::detector_model_option\fP detector)"
.br
.ti -1c
.RI "static \fBDetectorConfig::detector_model_option\fP \fBgetDetectorType\fP (void)"
.br
.ti -1c
.RI "static void \fBsetCompressorMode\fP (\fBcompression_mode_option\fP mode)"
.br
.ti -1c
.RI "static \fBcompression_mode_option\fP \fBgetCompressorMode\fP (void)"
.br
.ti -1c
.RI "static void \fBsetProtectionMode\fP (\fBpatient_protection_option\fP mode)"
.br
.ti -1c
.RI "static \fBpatient_protection_option\fP \fBgetProtectionMode\fP (void)"
.br
.ti -1c
.RI "static void \fBsetArmMode\fP (\fBarm_mode_option\fP mode)"
.br
.ti -1c
.RI "static \fBarm_mode_option\fP \fBgetArmMode\fP (void)"
.br
.ti -1c
.RI "static bool \fBsetExposurePulse\fP (unsigned char seq, \fBexposure_pulse\fP^ pls)"
.br
.ti -1c
.RI "static bool \fBsetExposedPulse\fP (unsigned char seq, \fBexposure_pulse\fP^ pls)"
.br
.ti -1c
.RI "static \fBexposure_pulse\fP ^ \fBgetExposedPulse\fP (unsigned char seq)"
.br
.ti -1c
.RI "static \fBexposure_pulse\fP ^ \fBgetExposurePulse\fP (unsigned char seq)"
.br
.ti -1c
.RI "static bool \fBisXrayCompleted\fP ()"
.br
.ti -1c
.RI "static bool \fBisXrayRunning\fP ()"
.br
.ti -1c
.RI "static void \fBclearXrayCompleted\fP ()"
.br
.ti -1c
.RI "static void \fBsetXrayCompletedFlag\fP ()"
.br
.ti -1c
.RI "static \fBexposure_completed_errors\fP \fBgetExposureCompletedError\fP (void)"
.br
.ti -1c
.RI "static \fBexposure_completed_options\fP \fBgetExposureCompletedCode\fP (void)"
.br
.ti -1c
.RI "static void \fBsetCompletedError\fP (\fBexposure_completed_errors\fP err)"
.br
.ti -1c
.RI "static void \fBsetCompletedCode\fP (\fBexposure_completed_options\fP code)"
.br
.ti -1c
.RI "static \fBtomo_data\fP ^ \fBgetTomoExposure\fP (void)"
.br
.ti -1c
.RI "static void \fBenableXrayPushButtonEvent\fP (bool stat)"
.br
.ti -1c
.RI "static bool \fBgetXrayPushButtonEvent\fP (void)"
.br
.ti -1c
.RI "static void \fBreset\fP (void)"
.br
.ti -1c
.RI "static bool \fBstartExposure\fP (void)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "literal unsigned char \fBFOCUS_LARGE\fP = 0"
.br
.ti -1c
.RI "literal unsigned char \fBFOCUS_SMALL\fP = 1"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBExposures\fP ^ \fBpExposure\fP = gcnew \fBExposures\fP()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBexposureManagementLoop\fP (bool demo) override"
.br
.RI "This function is called in the \fBGenerator\fP Idle status in order to handle an Exposure procedure\&. "
.ti -1c
.RI "void \fBsetXrayEnable\fP (bool stat) override"
.br
.ti -1c
.RI "bool \fBgetXrayPushButton\fP (void) override"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This Class implements the Exposure data structures and the exposure worflows\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum class \fBExposures::arm_mode_option\fP\fC [strong]\fP"

.PP
This is the enumeration of the possible ARM usage during exposure 
.IP "\(bu" 2
ARM_ENA: The ARM shall be in a position defined by the Acquisition software;
.IP "\(bu" 2
ARM_DIS: The ARM can be in a arbitrary position;
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIARM_ENA \fP\fP
Enables the Angle range check during exposure;\&. 
.TP
\fB\fIARM_DIS \fP\fP
Disables the Angle range check during the exposure; 
.br
 
.SS "enum class \fBExposures::compression_mode_option\fP\fC [strong]\fP"

.PP
This is the enumeration of the possible Compression modes\&. 
.IP "\(bu" 2
CMP_KEEP: The commpressor paddle is not released after exposure;
.IP "\(bu" 2
CMP_RELEASE: The coompressor paddle is released after exposure;
.IP "\(bu" 2
CMP_DISABLE: The compression is not necessary (but can be applied) for the current exposure\&.
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICMP_KEEP \fP\fP
Keeps the compression after exposure;\&. 
.TP
\fB\fICMP_RELEASE \fP\fP
Releases the compression after exposure;\&. 
.TP
\fB\fICMP_DISABLE \fP\fP
Disables the Compression check (for exposures without the compression);\&. 
.SS "enum class \fBExposures::exposure_completed_errors\fP\fC [strong]\fP"

.PP
This class enumerates all the possible x-ray error reasons 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIXRAY_NO_ERRORS \fP\fP
No error code\&. 
.TP
\fB\fIXRAY_BUTTON_RELEASE \fP\fP
The X-Ray Button has been released 
.br
 
.TP
\fB\fIXRAY_TIMEOUT \fP\fP
Timeout generator sequence\&. 
.TP
\fB\fIXRAY_COMMUNICATION_ERROR \fP\fP
A generator command is failed 
.br
 
.TP
\fB\fIXRAY_INVALID_GENERATOR_STATUS \fP\fP
The generator is in a not expected status 
.br
 
.TP
\fB\fIXRAY_ERR_CODE \fP\fP
Initialize the ExposureModule error codes 
.br
 
.TP
\fB\fIXRAY_INVALID_2D_PARAMETERS \fP\fP
The pexposure parameters for 2D are incorrect\&. 
.TP
\fB\fIXRAY_INVALID_TOMO_PARAMETERS \fP\fP
The Tomo parameters has not been validated (selected) 
.br
 
.TP
\fB\fIXRAY_TIMEOUT_TILT_IN_HOME \fP\fP
Timeout waiting for the Tilt to be ready for home positioning\&. 
.TP
\fB\fIXRAY_ERROR_TILT_IN_HOME \fP\fP
Error in positionining the Tilt in Home 
.br
 
.TP
\fB\fIXRAY_GRID_ERROR \fP\fP
The Grid device is in error condition\&. 
.TP
\fB\fIXRAY_COLLI_FORMAT_ERROR \fP\fP
The current collimation format is not valid 
.br
 
.TP
\fB\fIXRAY_TIMEOUT_AEC \fP\fP
Timeout waiting the Main Pulse data after an AEC pre pulse\&. 
.TP
\fB\fIXRAY_POSITIONING_ERROR \fP\fP
Error in ARM or Tilt positioning\&. 
.TP
\fB\fIXRAY_FILTER_ERROR \fP\fP
Error in selecting the filter for the exposure\&. 
.TP
\fB\fIXRAY_TUBE_TEMPERATURE \fP\fP
Error the Tube is in fault condition\&. 
.TP
\fB\fIXRAY_INVALID_PROCEDURE \fP\fP
Error non defined procedure has been requested\&. 
.SS "enum class \fBExposures::exposure_completed_options\fP\fC [strong]\fP"

.PP
This Enumeration class describes the possible results of an exposure\&. 
.IP "\(bu" 2
XRAY_SUCCESS: All the expected exposure's pulses has been successfully executed;
.IP "\(bu" 2
XRAY_PARTIAL_DOSE: the exposure has been partially executed\&.
.IP "\(bu" 2
XRAY_NO_DOSE: The exposure is early terminated without dose released to the patient\&.
.IP "\(bu" 2
XRAY_EXECUTING: The X-RAY sequence is still running
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIXRAY_SUCCESS \fP\fP
XRAY sequence successfully completed\&. 
.TP
\fB\fIXRAY_PARTIAL_DOSE \fP\fP
XRAY sequence partially completed\&. 
.TP
\fB\fIXRAY_NO_DOSE \fP\fP
XRAY sequence aborted without dose 
.br
 
.SS "enum class \fBExposures::exposure_type_options\fP\fC [strong]\fP"

.PP
This is the enumeration class defining all the possible exposures 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAN_2D \fP\fP
The next exposure is a 2D manual mode\&. 
.TP
\fB\fIAEC_2D \fP\fP
The next exposure is a 2D with AEC\&. 
.TP
\fB\fIMAN_3D \fP\fP
The next exposure is a Tomo 3D in manual mode\&. 
.TP
\fB\fIAEC_3D \fP\fP
The next exposure is a Tomo 3D with AEC\&. 
.TP
\fB\fIMAN_COMBO \fP\fP
The next exposure is a Manual Combo\&. 
.TP
\fB\fIAEC_COMBO \fP\fP
The next exposure is a Combo with AEC\&. 
.TP
\fB\fIMAN_AE \fP\fP
The next exposure is a Dual energy exposure in manual mode\&. 
.TP
\fB\fIAEC_AE \fP\fP
The next exposure is a Dual energy with AEC 
.br
 
.TP
\fB\fITEST_2D \fP\fP
This is a test exposure without Detector synch\&. 
.SS "enum class \fBExposures::patient_protection_option\fP\fC [strong]\fP"

.PP
This is the enumeration of the possible Patient Protection usage during exposure 
.IP "\(bu" 2
PROTECTION_ENA: The Patient protection shall be present during exposure;
.IP "\(bu" 2
PROTECTION_DIS: The patient protection can be removed during exposure;
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIPROTECTION_ENA \fP\fP
Enables the Patient protection check;\&. 
.TP
\fB\fIPROTECTION_DIS \fP\fP
Disables the Patient protection check; 
.br
 
.SH "Member Function Documentation"
.PP 
.SS "void Exposures::exposureManagementLoop (bool demo)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
This function is called in the \fBGenerator\fP Idle status in order to handle an Exposure procedure\&. The Procedure handle the activation and the completion of any exposure procedure:
.PP
The application should have used the dedicated API routine to activate an exposure sequence: the ExposureModule class provides all the API to prrepare and select the further exposure procedure\&.
.PP
This function:
.IP "\(bu" 2
Resets the internal and external Exposed-Pulse data structures:
.IP "  \(bu" 4
Those structure will be filled, after the exposure completion, with the actual exposed parameters like kV, mAs,\&.\&.
.PP

.IP "\(bu" 2
Checks for the XRAY-push button activation;
.IP "\(bu" 2
Checks for the Tube temperature validity;
.IP "\(bu" 2
Pre-select the current filter that will be used;
.IP "\(bu" 2
Starts the dedicated exsposure procedure;
.IP "\(bu" 2
Evaluates the exposure completion code;
.IP "\(bu" 2
If requested, interact with the Acquisition software to signal the exposure completion event;
.IP "\(bu" 2
Handles the final status of the compressor device (keep compression or release);
.PP

.PP
Reimplemented from \fBGenerator\fP\&.
.SS "bool Exposures::getXrayPushButton (void)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBGenerator\fP\&.
.SS "void Exposures::setXrayEnable (bool stat)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBGenerator\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU from the source code\&.
