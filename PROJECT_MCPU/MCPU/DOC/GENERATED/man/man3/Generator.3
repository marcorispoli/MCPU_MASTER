.TH "Generator" 3 "Mon Sep 30 2024" "MCPU" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Generator \- This Module class implements the communication and control of the the SHFD Device\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Generator\&.h>\fP
.PP
Inherits \fBTcpClientCLI\fP\&.
.PP
Inherited by \fBExposures\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum class \fBgenerator_errors\fP { \fBGEN_NO_ERRORS\fP = 0, \fBGEN_INVALID_PROCEDURE\fP, \fBGEN_INVALID_PARAMS\fP, \fBGEN_INVALID_STATUS\fP, \fBGEN_COMMUNICATION_ERROR\fP, \fBGEN_INTERNAL_ERROR\fP, \fBGEN_BUTTON_RELEASE\fP, \fBGEN_TIMEOUT\fP, \fBGEN_LAST_ERRCODE\fP }"
.br
.RI "This enumeration class provides a standard set of possible error codes during a pulse exposure\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGenerator\fP (void)"
.br
.RI "This is the class constructor "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBstartNormalMode\fP (void)"
.br
.RI "This function starts the \fBGenerator\fP Module in Normal (non simulated) mode "
.ti -1c
.RI "static void \fBstartSimulatorMode\fP (void)"
.br
.RI "This function starts the \fBGenerator\fP Module in Simulation mode "
.ti -1c
.RI "static bool \fBisSmartHubConnected\fP (void)"
.br
.RI "This method provides the current smart hub connection status "
.ti -1c
.RI "static bool \fBisGeneratorConnected\fP (void)"
.br
.RI "This method provides the current \fBGenerator\fP connection status "
.ti -1c
.RI "static bool \fBisServiceToolConnected\fP (void)"
.br
.RI "This method provides the current Service Tool detection status "
.ti -1c
.RI "static bool \fBisGeneratorIdle\fP (void)"
.br
.ti -1c
.RI "static bool \fBisReadyForExposure\fP (void)"
.br
.ti -1c
.RI "static bool \fBisSimulatorMode\fP (void)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBsetXrayEnable\fP (bool stat)"
.br
.ti -1c
.RI "virtual bool \fBgetXrayPushButton\fP (void)"
.br
.ti -1c
.RI "virtual void \fBexposureManagementLoop\fP (bool demo)"
.br
.ti -1c
.RI "void \fBrxData\fP (cli::array< Byte >^ receiveBuffer, int rc) override"
.br
.RI "This is the ethernet reception buffer callback\&. "
.ti -1c
.RI "\fBgenerator_errors\fP \fBgeneratorExecutePulseSequence\fP (System::String^ ExpName, int ms_timeout)"
.br
.RI "This function controls the generator execution of a single exposure pulse\&. "
.ti -1c
.RI "\fBgenerator_errors\fP \fBgenerator2DPulsePreparation\fP (System::String^ exp_name, float kV, float mAs, bool islargefocus, bool det_sync, bool grid_sync, int exp_time)"
.br
.ti -1c
.RI "\fBgenerator_errors\fP \fBgenerator2DAecPrePulsePreparation\fP (System::String^ exp_name, float kV, float mAs, bool islargefocus, int exp_time)"
.br
.ti -1c
.RI "\fBgenerator_errors\fP \fBgenerator2DAecPulsePreparation\fP (System::String^ exp_name, float kV, float mAs, bool islargefocus, int exp_time)"
.br
.ti -1c
.RI "\fBgenerator_errors\fP \fBgenerator3DPulsePreparation\fP (System::String^ exp_name, float kV, float mAs, int tomo_samples, int tomo_skip, bool islargefocus, int min_exp_time, int max_exp_time)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static \fBGenerator\fP ^ \fBgetDevice\fP (void)"
.br
.ti -1c
.RI "static System::String ^ \fBgetGeneratorErrorString\fP (System::String^ errstr)"
.br
.RI "This function returns a description strings of the System Message Error\&. "
.ti -1c
.RI "static unsigned char \fBgetGeneratorStatus\fP (void)"
.br
.ti -1c
.RI "static float \fBgetSelectedAnodeCurrent\fP (void)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This Module class implements the communication and control of the the SHFD Device\&. 


.SH "Module Dependencies"
.PP
.SS "R2CP Installation and setup"
The Module runs with the following R2CP settings:
.PP
.IP "\(bu" 2
Smart Hub Installed into C:/OEM;
.IP "\(bu" 2
SQLite database for system messages installed into C:/OEM/AppData/system_messages\&.sqlite;
.IP "\(bu" 2
SmartHub IP/Port connection: 192\&.6\&.1\&.201 @ 10000;
.IP "\(bu" 2
Smart Hub Node Id: 1;
.IP "\(bu" 2
\fBGenerator\fP Node Id: 6;
.IP "\(bu" 2
Service Tool Node Id: 9;
.IP "\(bu" 2
Application Node Id: 17;
.IP "\(bu" 2
Direct Workstation: 1
.IP "\(bu" 2
Detector Workstation: 5
.PP
.SS "Application libraries"
The Module uses the SQLite dll files:
.IP "\(bu" 2
The Dll shall be installed into the {$ApplicationExecutable}/SQLITE;
.IP "\(bu" 2
The following dll shall be present into the SQLITE subdir:
.IP "  \(bu" 4
SQLite\&.Designer\&.dll
.IP "  \(bu" 4
SQLite\&.Interop\&.dll
.IP "  \(bu" 4
System\&.Data\&.SQLite\&.dll
.IP "  \(bu" 4
System\&.Data\&.SQLite\&.EF6\&.dll
.IP "  \(bu" 4
System\&.Data\&.SQLite\&.Linq\&.dll
.PP

.PP
.SH "Module Usage"
.PP
The Application shall subclasses this module in order to implement the specific exposure workflow\&.
.PP
The Application shall override the following callbacks:
.IP "\(bu" 2
setXrayEnable(): this function is called by the base class when the xray_enable hardware signal needs to be set properly;
.IP "\(bu" 2
exposureManagementLoop(): the base class calls this fuction every 100ms when in ready for the exposure internal status;
.PP
.PP
The setXrayEnable() should be implemented so that the Application can properly set the external hardware signal;
.PP
In the exposureManagementLoop() the Application should implement the:
.IP "\(bu" 2
Exposure Initialization process: detect when the application request a given exposure procedure;
.IP "\(bu" 2
Exposure Data Prepapration: preparing and validating the exposures data;
.IP "\(bu" 2
Exposure Implementation: implementation of a given exposure procedures;
.IP "\(bu" 2
Exposure Termination: handling the exposure termination;
.PP
.SH "Module General description"
.PP
This module implements the R2CP protocol interface in order to communicate and control the \fBGenerator\fP Device through the external Smart Hub software\&.
.PP
The Feature provided by this module are following described:
.IP "\(bu" 2
Simulator Mode/ Exposure Mode: the module provides the simulation mode activation\&.
.br
In simulation mode the presence of the \fBGenerator\fP device is not necessary (nor the Smart Hub software);
.IP "\(bu" 2
Connection with the Smart Hub: the module keeps the connection alive and handle possible disconnections;
.IP "\(bu" 2
External Service Tool presence detection: the module handles the presence of the service tool software;
.IP "\(bu" 2
System Message Handling: the module handles the presence of the persistent system messages;
.PP
.SH "Internal Module Status"
.PP
The \fBGenerator\fP module can be in one of the following internal status:
.IP "\(bu" 2
Idle Status: the generator completed succesfully the initialization\&.
.IP "  \(bu" 4
The communication with the Smart Hub and the \fBGenerator\fP device is working;
.PP

.IP "\(bu" 2
Ready For Exposure: the generator is ready to init a pulse sequence\&.
.IP "  \(bu" 4
The Ready for exposure is set when the \fBGenerator\fP is in Idle and no system message are presents
.PP

.PP
.SH "External Service Tool sotware activation detection"
.PP
The Module detects the presence of the Service Tool software activation\&.
.PP
When the software is detected, the module enters into a running loop with no action, until the software is closed\&.
.PP
The communication with the \fBGenerator\fP is reinitialized as soon as the Service Tool is disconnected and the normal working mode is ripristinated\&.
.SH "Communication initialization"
.PP
The communication is initialized:
.IP "\(bu" 2
after system startup;
.IP "\(bu" 2
after a communication error during the normal mode (idle);
.IP "\(bu" 2
after the service tool software is closed;
.PP
.PP
During the initialization, the module:
.IP "\(bu" 2
tests the communication with the Smart Hub and the \fBGenerator\fP;
.IP "\(bu" 2
initializes the Databanks and the Procedures used;
.IP "\(bu" 2
resets all the system messages should pending in the generator;
.PP
.PP
When the Initialization should successfully completes the module enters the Idle mode\&.
.SH "System Messages handling"
.PP
The module periodically checks the presence of the system messages in the generator device\&.
.PP
The module resets all the messages and stores the non resettable (persistent) messages\&.
.PP
The persistent messages can originate a System Error message with the description of the currnt persisten message\&.
.PP
The Description of the message is retrived by the SQLite archive that shall be installed into the /OEM/AppData/system_messages\&.sqlite database\&.
.SS "RX DISABLE MESSAGE handling"
A special message is treated apart: GENERAL_RX_DISABLE_MSG_ID = 500074;
.PP
This message is not stored in the current persistent message queue because the module activate it to prevent an unexpected exposure\&.
.PP
The module activates it:
.IP "\(bu" 2
after the system startup;
.IP "\(bu" 2
in Idle after any exposure sequence;
.PP
.PP
The module clears it:
.IP "\(bu" 2
at the beginning of the first pulse of a sequence\&.
.PP
.PP
The Status of this message is not visible out of the \fBGenerator\fP module\&.
.SH "Exposure management"
.PP
The module provides the control of four exposure types:
.IP "\(bu" 2
2D Single Pulse exposure;
.IP "\(bu" 2
2D AEC sequence (pre-pulse + pulse);
.IP "\(bu" 2
3D Single Pulse exposure;
.IP "\(bu" 2
3D AEC sequence (pre-pulse + pulse);
.PP
.PP
The 2D single pulse exposure can be activated with or without the use of the Grid and Detector synchronization signal\&.
.PP
The Application can implement an arbitrary exposure workflow using an arbitrary sequence of the basic exposure types\&.
.PP
In order to implement such generic workflow, the application, subclassing the \fBGenerator\fP class, shall override the exposureManagementLoop()\&. This callback is called by the generator class ones for 100ms when in Ready For Exposure mode\&.
.SS "2D Single Pulse Exposure implementation"
The application shall call the following procedures in order to activate a generator Single Pulse sequence:
.PP
.IP "\(bu" 2
generator2DPulsePreparation() : this routine prepares the \fBGenerator\fP device for the procedure activation\&.
.br
With this routine the application sets the exposure parameters to be used during the single pulse exposure\&.
.IP "\(bu" 2
\fBgeneratorExecutePulseSequence()\fP: this procedure handles the internal generator status machine that activates the x-rays\&.
.PP
.SS "2D AEC Exposure implementation"
The application shall call the following procedures in order to activate a generator 2D-AEC sequence:
.PP
.IP "\(bu" 2
generator2DAecPrePreparation() : this routine prepares the \fBGenerator\fP device for the Aec-Pre procedure activation\&.
.br
With this routine the application sets the pre-pulse exposure parameters to be used \&.
.IP "\(bu" 2
\fBgeneratorExecutePulseSequence()\fP: this procedure handles the internal generator status machine that activates the x-rays for the pre-pulse procedure;
.IP "\(bu" 2
generator2DAecPulsePreparation() : this routine prepares the \fBGenerator\fP device for the Aec-Pulse procedure activation\&.
.br
With this routine the application sets the main-pulse exposure parameters to be used \&.
.IP "\(bu" 2
\fBgeneratorExecutePulseSequence()\fP: this procedure handles the internal generator status machine that activates the x-rays for the pulse procedure;
.PP
.SS "3D Single Pulse Exposure implementation"
The application shall call the following procedures in order to activate a generator 3D Single Pulse sequence:
.PP
.IP "\(bu" 2
generator3DPulsePreparation() : this routine prepares the \fBGenerator\fP device for the procedure activation\&.
.br
With this routine the application sets the exposure parameters to be used during the single pulse exposure\&.
.IP "\(bu" 2
\fBgeneratorExecutePulseSequence()\fP: this procedure handles the internal generator status machine that activates the x-rays\&.
.PP
.SS "3D AEC Exposure implementation"
The application shall call the following procedures in order to activate a generator 3D-AEC sequence:
.PP
.IP "\(bu" 2
generator3DAecPrePreparation() : this routine prepares the \fBGenerator\fP device for the 3D Aec-Pre procedure activation\&.
.br
With this routine the application sets the pre-pulse exposure parameters to be used \&.
.IP "\(bu" 2
\fBgeneratorExecutePulseSequence()\fP: this procedure handles the internal generator status machine that activates the x-rays for the pre-pulse procedure;
.IP "\(bu" 2
generator3DAecPulsePreparation() : this routine prepares the \fBGenerator\fP device for the 3D Aec-Pulse procedure activation\&.
.br
With this routine the application sets the main-pulse exposure parameters to be used \&.
.IP "\(bu" 2
\fBgeneratorExecutePulseSequence()\fP: this procedure handles the internal generator status machine that activates the x-rays for the pulse procedure; 
.PP

.SH "Member Enumeration Documentation"
.PP 
.SS "enum class \fBGenerator::generator_errors\fP\fC [strong]\fP"

.PP
This enumeration class provides a standard set of possible error codes during a pulse exposure\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIGEN_NO_ERRORS \fP\fP
No error code\&. 
.TP
\fB\fIGEN_INVALID_PROCEDURE \fP\fP
A not valid procedure has been requested\&. 
.TP
\fB\fIGEN_INVALID_PARAMS \fP\fP
A non valid exposure parameter has been detected\&. 
.TP
\fB\fIGEN_INVALID_STATUS \fP\fP
The generator is in a not expected status 
.br
 
.TP
\fB\fIGEN_COMMUNICATION_ERROR \fP\fP
A generator command is failed\&. 
.TP
\fB\fIGEN_INTERNAL_ERROR \fP\fP
The generator activated internal error messages\&. 
.TP
\fB\fIGEN_BUTTON_RELEASE \fP\fP
The X-Ray Button has been released\&. 
.TP
\fB\fIGEN_TIMEOUT \fP\fP
Timeout generator sequence 
.br
 
.TP
\fB\fIGEN_LAST_ERRCODE \fP\fP
This code shall be used by the Application Subclass to enhance the error code list during the exposures\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Generator::Generator (void)"

.PP
This is the class constructor The Constructor instances the base class with the Smart Hub IP and Port address 
.SH "Member Function Documentation"
.PP 
.SS "virtual void Generator::exposureManagementLoop (bool demo)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBExposures\fP\&.
.SS "\fBGenerator::generator_errors\fP Generator::generatorExecutePulseSequence (System::String^ ExpName, int ms_timeout)\fC [protected]\fP"

.PP
This function controls the generator execution of a single exposure pulse\&. The Single Pulse is any pulse composing a complete exposure sequence:
.br
.IP "\(bu" 2
The Manual 2D sequence is composed by only one pulse-Sequence;
.IP "\(bu" 2
The AEC 2D sequence is composed by two pulse-Sequences (the pre-pulse and main-pulse);
.IP "\(bu" 2
The 3D manual Exposure is composed by only one pulse-Sequence, where the sequence is a multi kv pulse output;
.IP "\(bu" 2
The 3D AEC Exposure is composed by two pulse-Sequence ( the pre-pulse and the main train of kv pulses);
.IP "\(bu" 2
And so on\&.\&.\&.
.PP
.PP
The procedure:
.IP "\(bu" 2
waits to exit from the stand-by before to follow the genratore sequence;
.IP "\(bu" 2
follows the generator status changes until the Stand-By or the WaitFootRelease status is detected;
.PP
.PP
The procedure will fail always when:
.IP "\(bu" 2
an invalid status is detected;
.IP "\(bu" 2
the procedure timeout expires;
.IP "\(bu" 2
the x-ray enable signal is released (x-ray push button early release);
.PP
.PP
\fBParameters\fP
.RS 4
\fIExpName\fP A string used to log the name of the current exposure sequence
.br
\fIms_timeout\fP the timeout assigned to the execution of a pulse in ms
.RE
.PP
\fBReturns\fP
.RS 4
The procedure returns the ExposureModule::exposure_completed_errors::XRAY_NO_ERRORS if csuccessfully completes
.RE
.PP

.SS "System::String Generator::getGeneratorErrorString (System::String^ errstr)\fC [static]\fP, \fC [protected]\fP"

.PP
This function returns a description strings of the System Message Error\&. The whole set of the system messages are stored into an SQLite database file in the OEM/AppData/system_messages\&.sqlite file\&.
.PP
This function makes use of the message id code to retrive the message description in a readable string format\&.
.PP
\fBParameters\fP
.RS 4
\fIerrstr\fP This is the message identifier code in string format
.RE
.PP
\fBReturns\fP
.RS 4
A desciption string of the related system message
.RE
.PP

.SS "bool Generator::isGeneratorConnected (void)\fC [static]\fP"

.PP
This method provides the current \fBGenerator\fP connection status 
.PP
\fBReturns\fP
.RS 4
True if a valid communication with the \fBGenerator\fP device is present
.RE
.PP

.SS "bool Generator::isServiceToolConnected (void)\fC [static]\fP"

.PP
This method provides the current Service Tool detection status If the External Service Tool software should be executed the \fBGenerator\fP module stop working unil the software should be closed\&.
.PP
The Application can monitor this particolar running mode using this method 
.PP
\fBReturns\fP
.RS 4
True if the Service Tool is running on the \fBGantry\fP PC
.RE
.PP

.SS "bool Generator::isSmartHubConnected (void)\fC [static]\fP"

.PP
This method provides the current smart hub connection status 
.PP
\fBReturns\fP
.RS 4
True if a valid communication with the Smat Hub is present 
.RE
.PP

.SS "void Generator::rxData (cli::array< Byte >^ receiveBuffer, int rc)\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
This is the ethernet reception buffer callback\&. The routine detect multiple nested frames and passes every frame 
.br
to the R2CP module to be properly processed\&.
.PP
\fBParameters\fP
.RS 4
\fIreceiveBuffer\fP 
.br
\fIrc\fP 
.RE
.PP

.PP
Reimplemented from \fBTcpClientCLI\fP\&.
.SS "void Generator::startNormalMode (void)\fC [static]\fP"

.PP
This function starts the \fBGenerator\fP Module in Normal (non simulated) mode 
.SS "void Generator::startSimulatorMode (void)\fC [static]\fP"

.PP
This function starts the \fBGenerator\fP Module in Simulation mode The simulation mode provides a transparent Application interface that doesn't make use of the \fBGenerator\fP device but allowing the application to activate the exposure workflows in a simulated way\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU from the source code\&.
