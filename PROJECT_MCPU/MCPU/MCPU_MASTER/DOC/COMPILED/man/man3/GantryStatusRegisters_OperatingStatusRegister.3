.TH "GantryStatusRegisters::OperatingStatusRegister" 3 "Mon Dec 4 2023" "MCPU_MASTER Software Description" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GantryStatusRegisters::OperatingStatusRegister \- This is the Gantry operating status register definition\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gantry_global_status\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum class \fBoptions\fP { \fBGANTRY_STARTUP\fP = 0, \fBGANTRY_IDLE\fP, \fBGANTRY_OPEN_STUDY\fP, \fBGANTRY_SERVICE\fP, \fBLEN\fP, \fBUNDEF\fP = LEN }"
.br
.RI "This is the enumeration option code  "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static String ^ \fBgetPatientName\fP (void)"
.br
.ti -1c
.RI "static bool \fBsetOpenStudy\fP (String^ patient_name)"
.br
.ti -1c
.RI "static bool \fBsetCloseStudy\fP (void)"
.br
.ti -1c
.RI "static bool \fBsetService\fP (void)"
.br
.ti -1c
.RI "static bool \fBsetIdle\fP (void)"
.br
.ti -1c
.RI "static bool \fBsetStartup\fP (void)"
.br
.ti -1c
.RI "static String ^ \fBgetStatus\fP (void)"
.br
.ti -1c
.RI "static bool \fBisSERVICE\fP (void)"
.br
.ti -1c
.RI "static bool \fBisIDLE\fP (void)"
.br
.ti -1c
.RI "static bool \fBisOPEN\fP (void)"
.br
.ti -1c
.RI "static bool \fBisCLOSE\fP (void)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const cli::array< String^> ^ \fBtags\fP = gcnew cli::array<String^> { 'GANTRY_STARTUP', 'GANTRY_IDLE', 'GANTRY_OPEN_STUDY', 'GANTRY_SERVICE', 'UNDEF' }"
.br
.RI "This is the option-tags static array\&. "
.in -1c
.SS "Events"

.in +1c
.ti -1c
.RI "static \fBdelegate_void_callback\fP^ \fBoperating_status_change_event\fP"
.br
.RI "This event is generated whenver the status of the register is changed\&. "
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static \fBoptions\fP \fBoperating_status\fP = \fBoptions::GANTRY_STARTUP\fP"
.br
.RI "This is the register option-code\&. "
.ti -1c
.RI "static String ^ \fBpatientName\fP = ''"
.br
.in -1c
.SH "Detailed Description"
.PP 
This is the Gantry operating status register definition\&. 


.SH "Member Enumeration Documentation"
.PP 
.SS "enum class \fBGantryStatusRegisters::OperatingStatusRegister::options\fP\fC [strong]\fP"

.PP
This is the enumeration option code  
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIGANTRY_STARTUP \fP\fP
Gantry is in the Startup operating mode\&. 
.TP
\fB\fIGANTRY_IDLE \fP\fP
Gantry is in the Idle operating mode\&. 
.TP
\fB\fIGANTRY_OPEN_STUDY \fP\fP
Gantry is in the Open-Study operating mode\&. 
.TP
\fB\fIGANTRY_SERVICE \fP\fP
Gantry is in the Service operating mode\&. 
.TP
\fB\fILEN \fP\fP
.TP
\fB\fIUNDEF \fP\fP
.SH "Member Function Documentation"
.PP 
.SS "static String ^ GantryStatusRegisters::OperatingStatusRegister::getPatientName (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static String ^ GantryStatusRegisters::OperatingStatusRegister::getStatus (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool GantryStatusRegisters::OperatingStatusRegister::isCLOSE (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool GantryStatusRegisters::OperatingStatusRegister::isIDLE (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool GantryStatusRegisters::OperatingStatusRegister::isOPEN (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool GantryStatusRegisters::OperatingStatusRegister::isSERVICE (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool GantryStatusRegisters::OperatingStatusRegister::setCloseStudy (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool GantryStatusRegisters::OperatingStatusRegister::setIdle (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool GantryStatusRegisters::OperatingStatusRegister::setOpenStudy (String^ patient_name)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool GantryStatusRegisters::OperatingStatusRegister::setService (void)\fC [inline]\fP, \fC [static]\fP"

.SS "static bool GantryStatusRegisters::OperatingStatusRegister::setStartup (void)\fC [inline]\fP, \fC [static]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBoptions\fP GantryStatusRegisters::OperatingStatusRegister::operating_status = \fBoptions::GANTRY_STARTUP\fP\fC [static]\fP, \fC [private]\fP"

.PP
This is the register option-code\&. 
.SS "String ^ GantryStatusRegisters::OperatingStatusRegister::patientName = ''\fC [static]\fP, \fC [private]\fP"

.SS "const cli::array<String^> ^ GantryStatusRegisters::OperatingStatusRegister::tags = gcnew cli::array<String^> { 'GANTRY_STARTUP', 'GANTRY_IDLE', 'GANTRY_OPEN_STUDY', 'GANTRY_SERVICE', 'UNDEF' }\fC [static]\fP"

.PP
This is the option-tags static array\&. 
.SH "Event Documentation"
.PP 
.SS "\fBdelegate_void_callback\fP^ GantryStatusRegisters::OperatingStatusRegister::operating_status_change_event\fC [static]\fP"

.PP
This event is generated whenver the status of the register is changed\&. Usage: \fBOperatingStatusRegister::operating_status_change_event\fP += gcnew delegate_void_callback(&some_class, some_class::func)  

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU_MASTER Software Description from the source code\&.
