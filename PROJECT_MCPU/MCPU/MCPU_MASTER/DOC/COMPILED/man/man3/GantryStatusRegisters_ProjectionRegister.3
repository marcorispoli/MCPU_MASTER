.TH "GantryStatusRegisters::ProjectionRegister" 3 "Mon Jul 24 2023" "MCPU_MASTER Software Description" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GantryStatusRegisters::ProjectionRegister \- This is the projection handling option class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gantry_global_status\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum class \fBoptions\fP { \fBLCC\fP = 0, \fBLFB\fP, \fBLISO\fP, \fBLLM\fP, \fBLLMO\fP, \fBLML\fP, \fBLMLO\fP, \fBLSIO\fP, \fBRCC\fP, \fBRFB\fP, \fBRISO\fP, \fBRLM\fP, \fBRLMO\fP, \fBRML\fP, \fBRMLO\fP, \fBRSIO\fP, \fBLEN\fP, \fBUNDEF\fP = LEN }"
.br
.RI "This is the enumeration option code of the selectable projections\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "delegate void \fBdelegate_lista_change\fP (void)"
.br
.RI "This is the delegate of the \fBlista_change_event()\fP;\&. "
.ti -1c
.RI "delegate void \fBdelegate_status_change\fP (void)"
.br
.RI "This is the delegate of the \fBstatus_change_event()\fP;\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBoptions\fP \fBgetCode\fP (void)"
.br
.ti -1c
.RI "static String ^ \fBgetTag\fP (void)"
.br
.RI "Returns the option tag of the register "
.ti -1c
.RI "static bool \fBsetCode\fP (\fBoptions\fP val)"
.br
.RI "This function set the register with the option code (and related tag)\&. "
.ti -1c
.RI "static bool \fBsetCode\fP (String^ val)"
.br
.ti -1c
.RI "static bool \fBsetList\fP (List< int >^ lista)"
.br
.RI "This function set the list of available projections\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const array< String^> ^ \fBtags\fP = gcnew array<String^> { 'LCC', 'LFB', 'LISO', 'LLM', 'LLMO', 'LML', 'LMLO', 'LSIO', 'RCC', 'RFB', 'RISO', 'RLM', 'RLMO', 'RML', 'RMLO', 'RSIO', 'UNDEF'}"
.br
.RI "This is the option-tags static array\&. "
.in -1c
.SS "Events"

.in +1c
.ti -1c
.RI "static \fBdelegate_lista_change\fP^ \fBlista_change_event\fP"
.br
.RI "This event is generated whenver the status of the register is changed\&. "
.ti -1c
.RI "static \fBdelegate_status_change\fP^ \fBstatus_change_event\fP"
.br
.RI "This event is generated whenver the status of the register is changed\&. "
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static \fBoptions\fP \fBcode\fP = \fBoptions::UNDEF\fP"
.br
.RI "This is the register option-code\&. "
.ti -1c
.RI "static List< int > ^ \fBlist\fP = gcnew List<int> {}"
.br
.RI "This is the list of the projections\&. "
.in -1c
.SH "Detailed Description"
.PP 
This is the projection handling option class\&. 

This class defines the availabl projection options, store the current selected projection and the projection selectable list\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum class \fBGantryStatusRegisters::ProjectionRegister::options\fP\fC [strong]\fP"

.PP
This is the enumeration option code of the selectable projections\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fILCC \fP\fP
.TP
\fB\fILFB \fP\fP
.TP
\fB\fILISO \fP\fP
.TP
\fB\fILLM \fP\fP
.TP
\fB\fILLMO \fP\fP
.TP
\fB\fILML \fP\fP
.TP
\fB\fILMLO \fP\fP
.TP
\fB\fILSIO \fP\fP
.TP
\fB\fIRCC \fP\fP
.TP
\fB\fIRFB \fP\fP
.TP
\fB\fIRISO \fP\fP
.TP
\fB\fIRLM \fP\fP
.TP
\fB\fIRLMO \fP\fP
.TP
\fB\fIRML \fP\fP
.TP
\fB\fIRMLO \fP\fP
.TP
\fB\fIRSIO \fP\fP
.TP
\fB\fILEN \fP\fP
.TP
\fB\fIUNDEF \fP\fP
.SH "Member Function Documentation"
.PP 
.SS "delegate void GantryStatusRegisters::ProjectionRegister::delegate_lista_change (void)"

.PP
This is the delegate of the \fBlista_change_event()\fP;\&. 
.SS "delegate void GantryStatusRegisters::ProjectionRegister::delegate_status_change (void)"

.PP
This is the delegate of the \fBstatus_change_event()\fP;\&. 
.SS "static \fBoptions\fP GantryStatusRegisters::ProjectionRegister::getCode (void)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the option code of the register 
.PP
\fBReturns\fP
.RS 4
the value of the option code 
.RE
.PP

.SS "static String ^ GantryStatusRegisters::ProjectionRegister::getTag (void)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the option tag of the register 
.PP
\fBReturns\fP
.RS 4
the value of the Tag 
.RE
.PP

.SS "static bool GantryStatusRegisters::ProjectionRegister::setCode (\fBoptions\fP val)\fC [inline]\fP, \fC [static]\fP"

.PP
This function set the register with the option code (and related tag)\&. The register is updated with the option code and related tag and, in case of value change, the \fBstatus_change_event()\fP is generated\&.
.PP
\fBParameters\fP
.RS 4
\fIval\fP this is the option-code to be set
.RE
.PP
\fBReturns\fP
.RS 4
true if success or false if the code doesn't exist
.RE
.PP

.SS "static bool GantryStatusRegisters::ProjectionRegister::setCode (String^ val)\fC [inline]\fP, \fC [static]\fP"
This function set the register with the option tag (and related code)\&.
.PP
The register is updated with the tag and the related option code and, in case of value change, the \fBstatus_change_event()\fP is generated\&.
.PP
\fBParameters\fP
.RS 4
\fIval\fP this is the tag to be set
.RE
.PP
\fBReturns\fP
.RS 4
true if success or false if the code doesn't exist
.RE
.PP

.SS "static bool GantryStatusRegisters::ProjectionRegister::setList (List< int >^ lista)\fC [inline]\fP, \fC [static]\fP"

.PP
This function set the list of available projections\&. In case of list change, the list_change_event() is generated 
.PP
\fBParameters\fP
.RS 4
\fIlista\fP This is the list
.RE
.PP
\fBReturns\fP
.RS 4
true if the list is a valid list
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBoptions\fP GantryStatusRegisters::ProjectionRegister::code = \fBoptions::UNDEF\fP\fC [static]\fP, \fC [private]\fP"

.PP
This is the register option-code\&. 
.SS "List<int> ^ GantryStatusRegisters::ProjectionRegister::list = gcnew List<int> {}\fC [static]\fP, \fC [private]\fP"

.PP
This is the list of the projections\&. 
.SS "const array<String^> ^ GantryStatusRegisters::ProjectionRegister::tags = gcnew array<String^> { 'LCC', 'LFB', 'LISO', 'LLM', 'LLMO', 'LML', 'LMLO', 'LSIO', 'RCC', 'RFB', 'RISO', 'RLM', 'RLMO', 'RML', 'RMLO', 'RSIO', 'UNDEF'}\fC [static]\fP"

.PP
This is the option-tags static array\&. 
.SH "Event Documentation"
.PP 
.SS "\fBdelegate_lista_change\fP^ GantryStatusRegisters::ProjectionRegister::lista_change_event\fC [static]\fP"

.PP
This event is generated whenver the status of the register is changed\&. Usage: \fBProjectionRegister::lista_change_event\fP += gcnew delegate_lista_change(&some_class, some_class::func) 
.SS "\fBdelegate_status_change\fP^ GantryStatusRegisters::ProjectionRegister::status_change_event\fC [static]\fP"

.PP
This event is generated whenver the status of the register is changed\&. Usage: \fBProjectionRegister::status_change_event\fP += gcnew delegate_status_change(&some_class, some_class::func) 

.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU_MASTER Software Description from the source code\&.
