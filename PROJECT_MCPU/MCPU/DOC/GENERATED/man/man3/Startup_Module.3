.TH "Startup_Module" 3 "Mon Sep 30 2024" "MCPU" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Startup_Module \- Startup Module
.PP
 \- This module implements the Workflow and GUI to handle the system startup workflow\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBCppCLRWinFormsProject::MainForm\fP"
.br
.RI "This is the Class implementing the Startup Operating mode\&. "
.in -1c
.SH "Detailed Description"
.PP 
This module implements the Workflow and GUI to handle the system startup workflow\&. 

At the program beginning several operation shall be initiated before to enter any of the Operating modes:
.PP
.IP "\(bu" 2
System Initialization;
.IP "\(bu" 2
Device Module initialization;
.IP "\(bu" 2
Revision check;
.PP
.SH "System Initialization"
.PP
The module setup and operation depends by several parameters stroed into the \fBSystemConfig\fP file\&.
.PP
This file determines:
.IP "\(bu" 2
The current system running mode: DEMO, SIMULATED, RUNNING modes;
.IP "\(bu" 2
The current modules operation mode for any of the possible system running modes;
.IP "\(bu" 2
The current set of expected device revision codes;
.IP "\(bu" 2
The communication connection addresses for some of the module;
.PP
.PP
In the System Initialization all the Operating modules will be instantiated\&.
.SH "Device Module Initialization"
.PP
Based on the System running mode and related module's operating mode, every device module is activated in real or simulated mode\&.
.PP
The following device modules will be activated in the given sequence:
.PP
.IP "\(bu" 2
\fBCanDriver\fP Module: this is the first to be activated, in order to open the CAN communication driver;
.IP "\(bu" 2
\fBPCB301\fP Module: this module initializes the \fBPCB301\fP communication or the board simulation;
.IP "\(bu" 2
\fBPCB302\fP Module: this module initializes the \fBPCB302\fP communication or the board simulation;
.IP "\(bu" 2
\fBPCB303\fP Module: this module initializes the \fBPCB303\fP communication or the board simulation;
.IP "\(bu" 2
\fBPCB315\fP Module: this module initializes the \fBPCB315\fP communication or the board simulation;
.IP "\(bu" 2
\fBPCB304\fP Module: this module initializes the \fBPCB304\fP communication or the board simulation;
.IP "\(bu" 2
\fBPCB326\fP Module: this module initializes the \fBPCB326\fP communication or the board simulation;
.IP "\(bu" 2
\fBGenerator\fP Module: this module initializes the \fBGenerator\fP communication or the device simulation;
.IP "\(bu" 2
\fBTiltMotor\fP Module: this module initializes the Tilt Motor communication or the board simulation;
.IP "\(bu" 2
\fBArmMotor\fP Module: this module initializes the Arm Motor communication or the board simulation;
.IP "\(bu" 2
\fBSlideMotor\fP Module: this module initializes the Slide Motor communication or the board simulation;
.IP "\(bu" 2
\fBBodyMotor\fP Module: this module initializes the Body Motor communication or the board simulation;
.IP "\(bu" 2
\fBVerticalMotor\fP Module: this module initializes the Vertical Motor communication or the board simulation;
.PP
.SH "Revision Check"
.PP
Every connected module provides the current bootloader and firmware revision code\&. This module checks the validity of the detected revision code with a list of valid revision codes from the \fBSystemConfig\fP file\&.
.PP
If a revision code should not match with the expected, a general error message is activated preventing the system to enter an operating mode\&.
.SH "Startup Completion"
.PP
When the startup completes, even if an error should happen, 
.br
the system automatically selects the Idle status\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for MCPU from the source code\&.
